`badnick - Burrobot (Labyrinth)

PROC    :mob_badnick_burrobot                   SECTION ::mobs                  `$8F6D
        `==============================================================================
PARAMS  IX;mob          HELP ""Address of the current mob being processed
{
	ld	[ix+#mob.width], 12
	ld	[ix+#mob.height],32
	ld	hl,$0202                        `loads $.TEMP6 & $.TEMP7 with $02
	ld	[$.TEMP6],hl
	call	:detectCollisionWithSonic
	
        ld	hl,$0800
	ld	[$.TEMP1],hl
	call	nc,:hitPlayer
	
        ld	l,[ix+#mob.Yspeed.lo]
	ld	h,[ix+#mob.Yspeed.hi]
	ld	a,[ix+#mob.Ydirection]
	ld	de,$0010
	add	hl,de
	adc	a,$00
	ld	c,a
	jp	m,._1
	ld	a,h
	cp	$04
	jr	c,._1
	ld	hl,$0300
	ld	c,$00
._1	ld	[ix+#mob.Yspeed.lo],l
	ld	[ix+#mob.Yspeed.hi],h
	ld	[ix+#mob.Ydirection],c
	bit	0,[ix+#mob.flags]
	jp	nz,._4
	ld	de,$ffd0
	ld	l,[ix+#mob.X.lo]
	ld	h,[ix+#mob.X.hi]
	add	hl,de
	ld	de,[$.SONIC.X]
	and	a
	sbc	hl,de
	jr	nc,._2
	ld	bc,$0030
	ld	l,[ix+#mob.X.lo]
	ld	h,[ix+#mob.X.hi]
	add	hl,bc
	and	a
	sbc	hl,de
	jr	c,._2
	set	0,[ix+#mob.flags]
	ld	[ix+#mob.Yspeed.lo],$80
	ld	[ix+#mob.Yspeed.hi],$fd
	ld	[ix+#mob.Ydirection],$ff
._2	ld	l,[ix+#mob.X.lo]
	ld	h,[ix+#mob.X.hi]
	ld	de,[$.SONIC.X]
	and	a
	sbc	hl,de
	jr	c,._3
	ld	[ix+#mob.Xspeed.lo],$c0
	ld	[ix+#mob.Xspeed.hi],$ff
	ld	[ix+#mob.Xdirection],$ff
	ld	de,._9059
	ld	bc,._904a
	call	:_7c41
	set	1,[ix+#mob.flags]
	ret
	
._3	ld	[ix+#mob.Xspeed.lo],$40
	ld	[ix+#mob.Xspeed.hi],$00
	ld	[ix+#mob.Xdirection],$00
	ld	de,._9059
	ld	bc,._9045
	call	:_7c41
	res	1,[ix+#mob.flags]
	ret
	
._4	ld	bc,._9054
	bit	1,[ix+#mob.flags]
	jr	nz,._5
	ld	bc,._904f
._5	ld	de,._9059
	call	:_7c41
	bit	7,[ix+#mob.flags]
	ret	z
	res	0,[ix+#mob.flags]
	ret
        
        `------------------------------------------------------------------------------
._9045  BYTE $00, $04, $01, $04, $FF
._904a  BYTE $02, $04, $03, $04, $FF
._904f  BYTE $04, $04, $04, $04, $FF
._9054  BYTE $05, $04, $05, $04, $FF

        `sprite layout
._9059  BYTE $44, $46, $FF, $FF, $FF, $FF
        BYTE $64, $66, $FF, $FF, $FF, $FF
        BYTE $FF, $FF, $FF, $FF, $FF, $FF

        BYTE $44, $46, $FF, $FF, $FF, $FF
        BYTE $48, $4A, $FF, $FF, $FF, $FF
        BYTE $FF, $FF, $FF, $FF, $FF, $FF

        BYTE $50, $52, $FF, $FF, $FF, $FF
        BYTE $70, $72, $FF, $FF, $FF, $FF
        BYTE $FF, $FF, $FF, $FF, $FF, $FF

        BYTE $50, $52, $FF, $FF, $FF, $FF
        BYTE $4C, $4E, $FF, $FF, $FF, $FF
        BYTE $FF, $FF, $FF, $FF, $FF, $FF

        BYTE $44, $46, $FF, $FF, $FF, $FF
        BYTE $68, $6A, $FF, $FF, $FF, $FF
        BYTE $FF, $FF, $FF, $FF, $FF, $FF

        BYTE $50, $52, $FF, $FF, $FF, $FF
        BYTE $6C, $6E, $FF, $FF, $FF, $FF
        BYTE $FF
}