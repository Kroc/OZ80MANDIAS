`electric sphere (Scrap Brain)

PROC    :mob_trap_electric                      SECTION ::mobs                  `$A0E8
        `==============================================================================
PARAMS  IX;mob          HELP ""Address of the current mob being processed
{
        set     5,[ix+#mob.flags]               `mob does not collide with the floor
        ld      [ix+#mob.width],$30
        ld      [ix+#mob.height],$10
        bit     0,[ix+#mob.flags]
        jr      nz,._1
        ld      l,[ix+#mob.X.lo]
        ld      h,[ix+#mob.X.hi]
        ld      de,$0018
        add     hl,de
        ld      [ix+#mob.X.lo],l
        ld      [ix+#mob.X.hi],h
        ld      l,[ix+#mob.Y.lo]
        ld      h,[ix+#mob.Y.hi]
        ld      de,$0010
        add     hl,de
        ld      [ix+#mob.Y.lo],l
        ld      [ix+#mob.Y.hi],h
        set     0,[ix+#mob.flags]
._1     ld      a,[ix+#mob.unknown11]
        cp      $64
        jr      c,._3
        jr      nz,._2
        
        ld      A;sfx           $13
        rst     :rst_playSFX
        
._2     ld      hl,$0000
        ld      [$.TEMP6],hl
        call    :detectCollisionWithSonic
        call    nc,:hitPlayer._35fd
        ld      de,._a173
        ld      bc,._a167
        call    :_7c41
        jp      ._5
        
._3     cp      $46
        jr      nc,._4
        xor     a;zero
        ld      [ix+#mob.spriteLayout.lo],a;zero
        ld      [ix+#mob.spriteLayout.hi],a;zero
        jp      ._5
        
._4     ld      de,._a173
        ld      bc,._a16e
        call    :_7c41
._5     inc     [ix+#mob.unknown11]
        ld      a,[ix+#mob.unknown11]
        cp      $a0
        ret     c
        ld      [ix+#mob.unknown11],$00
        ret

._a167                                                                          `$A167
        BYTE $00, $01, $01, $01, $02, $01, $FF
._a16e                                                                          `$A16E
        BYTE $02, $01, $03, $01, $FF

._a173  `sprite layout                                                          `$A173
        BYTE $02, $04, $FF, $FF, $FF, $FF
        BYTE $FF, $FF, $FF, $FF, $FF, $FF
        BYTE $FF, $FF, $FF, $FF, $FF, $FF

        BYTE $FE, $FE, $FE, $FE, $02, $04
        BYTE $FF, $FF, $FF, $FF, $FF, $FF
        BYTE $FF, $FF, $FF, $FF, $FF, $FF

        BYTE $FE, $FE, $16, $18, $FF, $FF
        BYTE $FF, $FF, $FF, $FF, $FF, $FF
        BYTE $FF, $FF, $FF, $FF, $FF, $FF
        BYTE $FF
}