`____________________________________________________________________________[$BF4C]___
`OBJECT: all emeralds animation

PROC    :doObjectCode_anim_emeralds             SECTION ::objects {
	set	5,(ix+$18)
	ld	hl,$5400		        `$15400 - emerald image
	call	:loadPowerUpIcon
	
	bit	0,(ix+$18)
	jr	nz,._1
	
	xor	a;zero			        `set A to 0
	ld	(ix+#object.spriteLayout.lo),a;zero
	ld	(ix+#object.spriteLayout.hi),a;zero
	ld	(ix+#object.Xspeed.lo),a;zero
	ld	(ix+#object.Xspeed.hi),a;zero
	ld	(ix+#object.Xdirection),a;zero
        
	inc	(ix+$11)
	ld	a,(ix+$11)
	cp	$50
	ret	c
	set	0,(ix+$18)
	ld	(ix+$11),$64
	ret
	
._1	ld	a,(ix+$11)
	and	a
	jr	z,._2
	dec	(ix+$11)
	jr	._3
	
._2	ld	(ix+#object.Yspeed.lo),$80
	ld	(ix+#object.Yspeed.hi),$ff
	ld	(ix+#object.Ydirection),$ff
._3	ld	hl,._bff1
	ld	a,($.FRAMECOUNT)
	rrca	
	jr	nc,._4
	ld	a,(iy+#vars.spriteUpdateCount)
	ld	hl,($.SPRITES_CURRENT)
	push	af
	push	hl
	ld	hl,$.SPRITES
	ld	($.SPRITES_CURRENT),hl
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	de,($.CAMERA_Y)
	and	a
	sbc	hl,de
	ex	de,hl
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	bc,($.CAMERA_X)
	and	a
	sbc	hl,bc
	ld	bc,._bff1		        `address of sprite layout
	call	:processSpriteLayout
	pop	hl
	pop	af
	ld	($.SPRITES_CURRENT),hl
	ld	(iy+#vars.spriteUpdateCount),a
._4	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	de,$0020
	add	hl,de
	ld	de,($.CAMERA_Y)
	and	a
	sbc	hl,de
	ret	nc
	ld	a,$01
	ld	($.D289),a
	set	2,(iy+#vars.unknown_0D)
	ret

`sprite layout
._bff1  DATA $5C, $5E, $FF, $FF, $FF, $FF
        DATA $FF

        DATA $49, $43, $20, $54, $48, $45, $20, $48
}