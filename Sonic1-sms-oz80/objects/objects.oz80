`` Sonic 1 Master System Disassembly
   created by Kroc Camen <kroc@camendesign.com>
   for MaSS1VE: The Master System Sonic 1 Visual Editor <github.com/Kroc/MaSS1VE>
   ================================================================================= ``

INCLUDE "sonic.oz80"

INCLUDE "powerups_common.oz80"
INCLUDE "boss_endSign.oz80"

`and for whatever reason, the original ROM wedges the level palettes right here!
INCLUDE "..\palettes.oz80"

INCLUDE "badnick_crabmeat.oz80"
INCLUDE "platform_swinging.oz80"
INCLUDE "explosion.oz80"
INCLUDE "platform.oz80"
INCLUDE "platform_falling.oz80"
INCLUDE "unknown_6ac1.oz80"
INCLUDE "badnick_buzzbomber.oz80"
INCLUDE "platform_moving.oz80"
INCLUDE "bacnick_motobug.oz80"
INCLUDE "badnick_newtron.oz80"
INCLUDE "boss_greenHill.oz80"  
INCLUDE "boss_capsule.oz80"
INCLUDE "boss_animals.oz80"

`____________________________________________________________________________[$77BE]___
`called by the boss object code -- probably the exploded egg ship

PROC    :_77be                                  SECTION ::objects
{
	ld	a,($.D2EC)
	cp	$08
	jr	nc,._4
	ld	a,($.D2B1)
	and	a
	jp	nz,._2
	ld	hl,$0c08
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	ret	c
	bit	0,(iy+#vars.scrollRingFlags)
	ret	nz
	ld	a,($.SONIC.unknown18)
	rrca	
	jr	c,._1
	and	$02
	jp	z,:_35fd
._1	ld	de,$0001
	ld	hl,($.SONIC.Yspeed)
	ld	a,l
	cpl	
	ld	l,a
	ld	a,h
	cpl	
	ld	h,a
	ld	a,($.SONIC.Ydirection)
	cpl	
	add	hl,de
	adc	a,$00
	ld	($.SONIC.Yspeed),hl
	ld	($.SONIC.Ydirection),a
	
        `stop Sonic's movement (reset speed and direction)
	xor	a;zero			        `set A to 0
	ld	l;zero,a;zero
	ld	h;zero,a;zero
	ld	($.SONIC.Xspeed),hl;zero
	ld	($.SONIC.Xdirection),a;zero
        
        ld	a,$18
	ld	($.D2B1),a
	ld	a,$8f
	ld	($.D2B1+1),a
	ld	a,$3f
	ld	($.D2B3),a
	ld	a,$01
	rst	:rst_playSFX
	ld	a,($.D2EC)
	inc	a
	ld	($.D2EC),a
._2	ld	hl,($.D216)
	ld	de,._7922
	add	hl,de
	bit	1,(ix+$18)
	jr	z,._3
	ld	de,$0012
	add	hl,de
._3	ld	(ix+#object.spriteLayout.lo),l
	ld	(ix+#object.spriteLayout.hi),h
	
        ld	hl,$.D2ED
	ld	(hl),$18
	inc	hl
	ld	(hl),$00
	ret
	
._4	xor	a;zero
	ld	(ix+#object.Xspeed.lo),a;zero
	ld	(ix+#object.Xspeed.hi),a;zero
	ld	(ix+#object.Xdirection),a;zero
	ld	(ix+#object.Yspeed.lo),a;zero
	ld	(ix+#object.Yspeed.hi),a;zero
	ld	(ix+#object.Ydirection),a;zero
        
	ld	de,$0024
	ld	hl,($.D216)
	bit	1,(ix+$18)
	jr	z,._5
	ld	de,$0036
._5	add	hl,de
	ld	de,._7922
	add	hl,de
	ld	(ix+#object.spriteLayout.lo),l
	ld	(ix+#object.spriteLayout.hi),h
	ld	hl,$.D2ED+1                     `lo-addr of $.D2ED
	ld	a,(hl)
	cp	$0a
	jp	nc,._6
	dec	hl
	dec	(hl)
	ret	nz
	ld	(hl),$18
	inc	hl
	inc	(hl)
	call	:_7a3a
	ret
	
._6	ld	a,($.D2ED+1)                    `lo-addr of $.D2ED
	cp	$3a
	jr	nc,._7
	ld	l,(ix+#object.Ysubpixel)
	ld	h,(ix+#object.Y.lo)
	ld	a,(ix+#object.Y.hi)
	ld	de,$0020
	add	hl,de
	adc	a,$00
	ld	(ix+#object.Ysubpixel),l
	ld	(ix+#object.Y.lo),h
	ld	(ix+#object.Y.hi),a
._7	ld	hl,$.D2ED+1                     `lo-addr of $.D2ED
	ld	a,(hl)
	cp	$5a
	jr	nc,._8
	inc	(hl)
	ret
	
._8	jr	nz,._9
	ld	(hl),$5b
	
	ld	a,($.LEVEL_MUSIC)
	rst	:rst_playMusic
	
	ld	a,(iy+#vars.spriteUpdateCount)
	res	0,(iy+#vars.flags0)
	call	:waitForInterrupt
	ld	(iy+#vars.spriteUpdateCount),a
._9	ld	(ix+#object.Xspeed.lo),$00
	ld	(ix+#object.Xspeed.hi),$03
	ld	(ix+#object.Xdirection),$00
	ld	(ix+#object.Yspeed.lo),$60
	ld	(ix+#object.Yspeed.hi),$ff
	ld	(ix+#object.Ydirection),$ff
	ld	(ix+#object.spriteLayout.lo),._7922.lo
	ld	(ix+#object.spriteLayout.hi),._7922.hi
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,($.CAMERA_X)
	inc	d
	and	a
	sbc	hl,de
	ret	c
	
	`unlocks the screen?
	ld	(ix+#object.type),$FF	        `remove object?
	ld	hl,$2000		        `8192 -- max width of a level in pixels
	ld	($.LEVEL_RIGHT),hl
	ld	hl,$0000
	ld	($.CAMERA_X_GOTO),hl
	
	set	5,(iy+#vars.flags0)
	set	0,(iy+#vars.flags2)
	res	1,(iy+#vars.flags2)
	
	ld	a,($.CURRENT_LEVEL)
	cp	$0b
	jr	nz,._10
	
	set	1,(iy+#vars.flags9)
	
._11	`UNKNOWN
	ld	hl,$DA28
	ld	de,$2000
	ld	a,12
	call	:decompressArt
	ret

`sprite layout
._7922  DATA $2A, $2C, $2E, $30, $32, $FF
        DATA $4A, $4C, $4E, $50, $52, $FF
        DATA $6A, $6C, $6E, $70, $72, $FF
        
        DATA $20, $10, $12, $14, $28, $FF
        DATA $40, $42, $44, $46, $48, $FF
        DATA $60, $62, $64, $66, $68, $FF
        
        DATA $2A, $16, $18, $1A, $32, $FF
        DATA $4A, $4C, $4E, $50, $52, $FF
        DATA $6A, $6C, $6E, $70, $72, $FF
        
        DATA $20, $3A, $3C, $3E, $28, $FF
        DATA $40, $42, $44, $46, $48, $FF
        DATA $60, $62, $64, $66, $68, $FF
        
        DATA $2A, $34, $36, $38, $32, $FF
        DATA $4A, $4C, $4E, $50, $52, $FF
        DATA $6A, $6C, $6E, $70, $72, $FF
        
        DATA $20, $10, $12, $14, $28, $FF
        DATA $40, $42, $44, $46, $48, $FF
        DATA $60, $54, $56, $66, $68, $FF
        
        DATA $2A, $16, $18, $1A, $32, $FF
        DATA $4A, $4C, $4E, $50, $52, $FF
        DATA $6A, $5A, $5C, $70, $72, $FF
        
        DATA $20, $3A, $3C, $3E, $28, $FF
        DATA $40, $42, $44, $46, $48, $FF
        DATA $60, $54, $56, $66, $68, $FF
        
        DATA $2A, $34, $36, $38, $32, $FF
        DATA $4A, $4C, $4E, $50, $52, $FF
        DATA $6A, $5A, $5C, $70, $72, $FF
        
        DATA $20, $06, $08, $0A, $28, $FF
        DATA $40, $42, $44, $46, $48, $FF
        DATA $60, $62, $64, $66, $68, $FF
        
        DATA $20, $06, $08, $0A, $28, $FF
        DATA $40, $42, $44, $46, $48, $FF
        DATA $60, $62, $64, $66, $68, $FF
        
        DATA $0E, $10, $12, $14, $16, $FF
        DATA $40, $42, $44, $46, $48, $FF
        DATA $60, $62, $64, $66, $68, $FF
}

`____________________________________________________________________________[$79FA]___
`called by green hill boss, jungle boss and final animation

PROC    :_79fa                                  SECTION ::objects
{
	ld	a,(ix+#object.Xspeed.lo)
	or	(ix+#object.Xspeed.hi)
	ret	z
	ld	a,($.FRAMECOUNT)
	bit	0,a
	ret	nz
	and	$02
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	($.TEMP1),hl
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	($.TEMP3),hl
	ld	hl,$fff8
	ld	de,$0010
	ld	c,$04
	bit	7,(ix+#object.Xdirection)
	jr	z,._1
	ld	hl,$0028
	ld	c,$00
._1	ld	($.TEMP4),hl
	ld	($.TEMP6),de
	add	a,c
	call	:_3581
	ret
}

`____________________________________________________________________________[$7A3A]___
`called by `:_77be`, capsule and final animation

PROC    :_7a3a                                  SECTION ::objects
{
	call	:findEmptyObject
	ret	c
	push	hl
	call	:_LABEL_625_57
	and	$1f
	ld	l,a
	ld	h,$00
	ld	($.TEMP1),hl
	call	:_LABEL_625_57
	and	$1f
	ld	l,a
	ld	h,$00
	ld	($.TEMP3),hl
	pop	hl
	ld	e,(ix+#object.X.lo)
	ld	d,(ix+#object.X.hi)
	ld	c,(ix+#object.Y.lo)
	ld	b,(ix+#object.Y.hi)
	push	ix
	push	hl
	pop	ix
	xor	a;zero  			`set A to 0
	ld	(ix+#object.type),$0A	        `explosion
	ld	(ix+#object.Xsubpixel),a;zero
	ld	hl,($.TEMP1)
	add	hl,de
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	(ix+#object.Ysubpixel),a;zero
	ld	hl,($.TEMP3)
	add	hl,bc
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	ld	(ix+$11),a;zero
	ld	(ix+$16),a;zero
	ld	(ix+$17),a;zero
	ld	(ix+#object.Xspeed.lo),a;zero
	ld	(ix+#object.Xspeed.hi),a;zero
	ld	(ix+#object.Xdirection),a;zero
	ld	(ix+#object.Yspeed.lo),a;zero
	ld	(ix+#object.Yspeed.hi),a;zero
	ld	(ix+#object.Ydirection),a;zero
	
        pop	ix
	ld	a,$01
	rst	:rst_playSFX
	ret
}

INCLUDE "meta_trip.oz80"
INCLUDE "flower.oz80"
INCLUDE "meta_blink.oz80"

`____________________________________________________________________________[$7C41]___

PROC    :_7c41                                  SECTION ::objects
PARAMS  de      `e.g. $7DE1
        bc      `e.g. $7DDC
{
	ld	l,(ix+$17)

._1	ld	h,$00
	add	hl,bc
	ld	a,(hl)
	cp	$ff
	jr	nz,._2
	ld	l,$00
	ld	(ix+$17),l
	jp	._1
	
._2	inc	hl
	push	hl
	ld	l,a
	ld	h,$00
	add	hl,hl
	ld	c,l
	ld	b,h
	add	hl,hl
	add	hl,hl
	add	hl,hl
	add	hl,bc
	add	hl,de
	ld	(ix+#object.spriteLayout.lo),l
	ld	(ix+#object.spriteLayout.hi),h
	pop	hl
	inc	(ix+$16)
	ld	a,(hl)
	cp	(ix+$16)
	ret	nc
	ld	(ix+$16),$00
	inc	(ix+$17)
	inc	(ix+$17)
	ret
}	

PROC    :findEmptyObject                                  SECTION ::objects
        `====================================================================[$7C7B]===
        `search through the object storage and find the first empty object available
        `(this is used for spawning new objects, such as bullets)
{
	ld	hl,$.OBJECTS
	ld	de,#object.size
	ld	b, 31
        
.loop	ld	a,(hl)
	cp	$FF                             `"No Object" number
	ret	z                               `if = $FF then exit, empty slot found
	add	hl,de
	djnz	.loop
	
        `no free object place found!
	scf	                                `set the carry as a return flag
	ret
}

`____________________________________________________________________________[$7C8C]___
`used by bosses to lock the screen?

PROC    :_7c8c                                  SECTION ::objects
PARAMS  hl, de
{
	ld	($.CAMERA_X_GOTO),hl
	ld	($.CAMERA_Y_GOTO),de
	
	ld	hl,($.CAMERA_X)
	ld	($.LEVEL_LEFT),hl
	ld	($.LEVEL_RIGHT),hl
	
	ld	hl,($.CAMERA_Y)
	ld	($.LEVEL_TOP),hl
	ld	($.LEVEL_BOTTOM),hl
	ret
}

`____________________________________________________________________________[$7CA6]___

PROC    :_7ca6                                  SECTION ::objects
{
	ld	hl,($.CAMERA_X_GOTO)
	ld	de,($.CAMERA_X)
	and	a
	sbc	hl,de
	ret	nz
	ld	hl,($.CAMERA_Y_GOTO)
	ld	de,($.CAMERA_Y)
	and	a
	sbc	hl,de
	ret	nz
	res	5,(iy+#vars.flags0)
	ret
}

`____________________________________________________________________________[$7CC1]___

PROC    :_LABEL_7CC1_12                         SECTION ::objects
PARAMS  d       `bit 7 sets A to $FF instead of 0 -- direction?
{
	bit	6, (iy+#vars.flags6)
	ret	nz
	
	ld	l, (ix+#object.Ysubpixel)
	ld	h, (ix+#object.Y.lo)
	
	xor	a;zero			        `set A to 0
	
	bit	7, d
	jr	z, ._1
	dec	a
._1	add	hl, de
	adc	a, (ix+#object.Y.hi)
	ld	l, h
	ld	h, a
	add	hl, bc
	ld	a, ($.SONIC.width)
	ld	c, a
	xor	a;zero
	ld	b, a;zero
	sbc	hl, bc
	ld	($.SONIC.Y), hl
	ld	a, ($.D2E8)
	ld	hl, ($.D2E6)
	ld	($.SONIC.Yspeed), hl
	ld	($.SONIC.Ydirection), a
	
	ld	hl, $.SONIC.unknown18
	set	7, (hl)
	
	ret
}

INCLUDE "badnick_chopper.oz80"

`____________________________________________________________________________[$7E02]___
`OBJECT: log - vertical (Jungle)

PROC    :doObjectCode_platform_fallVert         SECTION ::object
{
	set	5,(ix+$18)
	ld	hl,$0030
	ld	($.D267),hl
	ld	hl,$0058
	ld	($.D269),hl
	ld	(ix+#object.width),$0c
	ld	(ix+#object.height),$10
	ld	(ix+#object.spriteLayout.lo),._7e89.lo
	ld	(ix+#object.spriteLayout.hi),._7e89.hi
	bit	0,(ix+$18)
	jr	nz,._7e3c
	ld	a,(ix+#object.Y.lo)
	ld	(ix+$12),a
	ld	a,(ix+#object.Y.hi)
	ld	(ix+$13),a
	ld	(ix+$14),$c0
	set	0,(ix+$18)
._7e3c
	ld	(ix+#object.Yspeed.lo),$80
	xor	a;zero
	ld	(ix+#object.Yspeed.hi), a;zero
	ld	(ix+#object.Ydirection), a;zero
	
	ld	a, ($.SONIC.Ydirection)
	and	a
	jp	m, ._1
	
	ld	hl, $0806
	ld	($.TEMP6), hl
	call	:_LABEL_3956_11
	jr	c, ._1
	ld	bc, $0010
	ld	e, (ix+#object.Yspeed.lo)
	ld	d, (ix+#object.Yspeed.hi)
	call	:_LABEL_7CC1_12
._1	ld	a, ($.FRAMECOUNT)
	and	$03
	ret	nz
	inc	(ix+$11)
	ld	a, (ix+$11)
	cp	(ix+$14)
	ret	c
	xor	a;zero			        `set A to 0
	ld	(ix+$11), a;zero
	ld	(ix+#object.Ysubpixel), a;zero
	ld	a, (ix+$12)
	ld	(ix+#object.Y.lo), a
	ld	a, (ix+$13)
	ld	(ix+#object.Y.hi), a
	ret

        `sprite layout
._7e89  DATA $FE, $FF, $FF, $FF, $FF, $FF
        DATA $18, $1A, $FF, $FF, $FF, $FF
        DATA $28, $2E, $FF, $FF, $FF, $FF
}

`____________________________________________________________________________[$7E9B]___
`OBJECT: log - horizontal (Jungle)

PROC    :doObjectCode_platform_fallHoriz        SECTION ::objects
{
	set	5,(ix+$18)
	ld	hl,$0030
	ld	($.D267),hl
	ld	hl,$0058
	ld	($.D269),hl
	ld	(ix+#object.width),$1a
	ld	(ix+#object.height),$10
	ld	(ix+#object.spriteLayout.lo),.layout.lo
	ld	(ix+#object.spriteLayout.hi),.layout.hi
	bit	0,(ix+$18)
	jp	nz,:doObjectCode_platform_fallVert._7e3c
	ld	a,(ix+#object.Y.lo)
	ld	(ix+$12),a
	ld	a,(ix+#object.Y.hi)
	ld	(ix+$13),a
	ld	(ix+$14),$c6
	set	0,(ix+$18)
	jp	:doObjectCode_platform_fallVert._7e3c
        
        `sprite layout
.layout DATA $FE, $FF, $FF, $FF, $FF, $FF                                    `$7ED9
        DATA $6C, $6E, $6E, $48, $FF, $FF
        DATA $FF
}

`____________________________________________________________________________[$7EE6]___
`OBJECT: log - floating (Jungle)

PROC    :doObjectCode_platform_roll             SECTION ::objects
{
	set	5,(ix+$18)
	ld	(ix+#object.width),$0a
	ld	(ix+#object.height),$10
	bit	0,(ix+$18)
	jr	nz,._1
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	de,$ffe8
	add	hl,de
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	set	0,(ix+$18)
._1	ld	(ix+#object.Yspeed.lo),$40
	xor	a;zero
	ld	(ix+#object.Yspeed.hi),a;zero
	ld	(ix+#object.Ydirection),a;zero
	ld	a,(ix+$11)
	cp	$14
	jr	c,._2
	ld	(ix+#object.Yspeed.lo),$c0
	ld	(ix+#object.Yspeed.hi),$ff
	ld	(ix+#object.Ydirection),$ff
	
._2	ld	a,($.SONIC.Ydirection)
	and	a
	jp	m,._8003
	
	ld	hl,$0806
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	jp	c,:_8003
	ld	bc,$0010
	ld	e,(ix+#object.Yspeed.lo)
	ld	d,(ix+#object.Yspeed.hi)
	call	:_LABEL_7CC1_12
	ld	hl,($.SONIC.Xspeed)
	ld	a,l
	or	h
	jr	z,._4
	ld	bc,$0012
	bit	7,h
	jr	z,._3
	ld	bc,$fffe
._3	ld	de,$0000
	call	:getFloorLayoutRAMPositionForObject
	ld	e,(hl)
	ld	d,$00
	ld	a,($.LEVEL_SOLIDITY)
	add	a,a
	ld	c,a
	ld	b,d
	ld	hl,:S1_SolidityPointers
	add	hl,bc
	ld	a,(hl)
	inc	hl
	ld	h,(hl)
	ld	l,a
	add	hl,de
	ld	a,(hl)
	and	$3f
	ld	a,d
	ld	e,d
	jr	nz,._5
._4	ld	a,($.SONIC.Xspeed.lo)
	ld	de,($.SONIC.Xspeed.hi)
	sra	d
	rr	e
	rra	
._5	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	add	a,(ix+#object.Xsubpixel)
	adc	hl,de
	ld	(ix+#object.Xsubpixel),a
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	($.SONIC.Xsubpixel),a
	ld	de,$fffc
	add	hl,de
	ld	($.SONIC.X),hl
	ld	de,($.SONIC.Xspeed)
	bit	7,d
	jr	z,._6
	ld	a,e
	cpl	
	ld	e,a
	ld	a,d
	cpl	
	ld	d,a
	inc	de
+._6	ld	l,(ix+$12)
	ld	h,(ix+$13)
	add	hl,de
	ld	a,h
	cp	$09
	jr	c,._7
	sub	$09
	ld	h,a
._7	ld	(ix+$12),l
	ld	(ix+$13),h
	ld	e,a
	ld	d,$00
	ld	hl,._8019
	add	hl,de
	ld	e,(hl)
	ld	hl,._8022
	add	hl,de
	ld	(ix+#object.spriteLayout.lo),l
	ld	(ix+#object.spriteLayout.hi),h
	jr	._800b

`======================================================================================

        DATA $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
        DATA $00 $0, $00 $00 $00
        
        DATA "TMR SEGA"
        
        DATA $59, $59
        DATA $1B, $A5
        DATA $76, $70, $00
        DATA $40

`======================================================================================
        
        DATA $00, $00, $00

        `jumped to by `doObjectCode_platform_roll`, OBJECT: log - floating (Jungle)
._8003  ld	(ix+#object.spriteLayout.lo),._8022.lo
	ld	(ix+#object.spriteLayout.hi),._8022.hi
._800b	inc	(ix+$11)
	ld	a,(ix+$11)
	cp	$28
	ret	c
	ld	(ix+$11),$00
	ret

._8019  DATA $00, $00, $00, $12, $12, $12, $24, $24, $24

        `sprite layout
._8022  DATA $FE, $FF, $FF, $FF, $FF, $FF
        DATA $3A, $3C, $FF, $FF, $FF, $FF
        DATA $FF, $FF, $FF, $FF, $FF, $FF

        DATA $FE, $FF, $FF, $FF, $FF, $FF
        DATA $36, $38, $FF, $FF, $FF, $FF
        DATA $FF, $FF, $FF, $FF, $FF, $FF

        DATA $FE, $FF, $FF, $FF, $FF, $FF
        DATA $4C, $4E, $FF, $FF, $FF, $FF
        DATA $FF
}

INCLUDE "boss_jungle.oz80"
INCLUDE "unknown_8128.oz80"
INCLUDE "badnick_yadrin.oz80"
INCLUDE "platform_bridge.oz80"

`____________________________________________________________________________[$8496]___
`OBJECT: boss (Bridge)

PROC    :doObjectCode_boss_bridge               SECTION ::objects
{
	set	5,(ix+$18)
	ld	(ix+#object.width), 30
	ld	(ix+#object.height),28
	call	:_7ca6
	ld	(ix+#object.spriteLayout.lo),:_865a.lo
	ld	(ix+#object.spriteLayout.hi),:_865a.hi
	bit	0,(ix+$18)
	jr	nz,._1
	
	ld	hl,$03a0
	ld	de,$0300
	call	:_7c8c
	
	`UNKNOWN
	ld	hl,$e508
	ld	de,$2000
	ld	a,12
	call	:decompressArt
	
	ld	hl,:S1_BossPalette
	ld	a,%00000010
	call	:loadPaletteOnInterrupt
	xor	a;zero
	ld	($.D2EC),a;zero
	
	ld	a,#index_music_boss1
	rst	:rst_playMusic
	
	set	0,(ix+$18)
._1	ld	a,(ix+$11)
	and	a
	jr	nz,._2
	call	:_LABEL_625_57
	and	$01
	add	a,a
	add	a,a
	ld	e,a
	ld	d,$00
	ld	hl,:_8632
	add	hl,de
	ld	a,(hl)
	ld	(ix+#object.X.lo),a
	inc	hl
	ld	a,(hl)
	inc	hl
	ld	(ix+#object.X.hi),a
	ld	a,(hl)
	inc	hl
	ld	(ix+#object.Y.lo),a
	ld	a,(hl)
	inc	hl
	ld	(ix+#object.Y.hi),a
	inc	(ix+$11)
	jp	._6
	
._2	dec	a
	jr	nz,._3
	ld	(ix+#object.Yspeed.lo),$80
	ld	(ix+#object.Yspeed.hi),$ff
	ld	(ix+#object.Ydirection),$ff
	ld	hl,$0380
	ld	e,(ix+#object.Y.lo)
	ld	d,(ix+#object.Y.hi)
	xor	a;zero
	sbc	hl,de
	jp	c,._6
	inc	(ix+$11)
	ld	(ix+$12),a;zero
	jp	._6
	
._3	dec	a
	jr	nz,._5
	xor	a;zero
	ld	(ix+#object.Yspeed.lo),a;zero
	ld	(ix+#object.Yspeed.hi),a;zero
	ld	(ix+#object.Ydirection),a;zero
	inc	(ix+$12)
	ld	a,(ix+$12)
	cp	$64
	jp	nz,._6
	inc	(ix+$11)
	ld	a,($.D2EC)
	cp	$08
	jr	nc,._6
	ld	hl,($.SONIC.X)
	ld	e,(ix+#object.X.lo)
	ld	d,(ix+#object.X.hi)
	and	a
	sbc	hl,de
	ld	hl,:_863a
	jr	c,._4
	ld	hl,:_864a
._4	ld	e,(hl)
	inc	hl
	ld	d,(hl)
	inc	hl
	ld	c,(hl)
	inc	hl
	ld	b,(hl)
	inc	hl
	push	hl
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	add	hl,de
	ld	($.TEMP1),hl
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	add	hl,bc
	ld	($.TEMP3),hl
	pop	hl
	ld	b,$03
	
.loop	push	bc
	ld	a,(hl)
	ld	($.TEMP4),a
	inc	hl
	ld	a,(hl)
	ld	($.TEMP5),a
	inc	hl
	ld	a,(hl)
	ld	($.TEMP6),a
	inc	hl
	ld	a,(hl)
	ld	($.TEMP7),a
	inc	hl
	push	hl
	ld	c,$10
	call	:_85d1
	pop	hl
	pop	bc
	djnz	.loop
	
	ld	a,$01
	rst	:rst_playSFX
	jp	._6
	
._5	ld	(ix+#object.Yspeed.lo),$80
	ld	(ix+#object.Yspeed.hi),$00
	ld	(ix+#object.Ydirection),$00
	ld	hl,$03c0
	ld	e,(ix+#object.Y.lo)
	ld	d,(ix+#object.Y.hi)
	xor	a;zero
	sbc	hl,de
	jr	nc,._6
	ld	(ix+$11),a;zero
	
._6	ld	hl,$00a2
	ld	($.D216),hl
	call	:_77be
	ret
}

`____________________________________________________________________________[$85D1]___
`called by bridge & labyrinth boss

PROC    :_85d1                                  SECTION ::objects
{
	push	bc
	call	:findEmptyObject
	pop	bc
	ret	c
	push	ix
	push	hl
	pop	ix
	xor	a;zero			        `set A to 0
	ld	(ix+#object.type),$0D	        `unknown object
	ld	hl,($.TEMP1)
	ld	(ix+#object.Xsubpixel),a;zero
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	hl,($.TEMP3)
	ld	(ix+#object.Ysubpixel),a;zero
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	ld	(ix+$11),a;zero
	ld	(ix+$13),c
	ld	(ix+$14),a;zero
	ld	(ix+$15),a;zero
	ld	(ix+$16),a;zero
	ld	(ix+$17),a;zero
	ld	hl,($.TEMP4)
	xor	a;zero
	bit	7,h
	jr	z,._1
	dec	a
._1	ld	(ix+#object.Xspeed.lo),l
	ld	(ix+#object.Xspeed.hi),h
	ld	(ix+#object.Xdirection),a
	ld	hl,($.TEMP6)
	xor	a
	bit	7,h
	jr	z,._2
	dec	a
._2	ld	(ix+#object.Yspeed.lo),l
	ld	(ix+#object.Yspeed.hi),h
	ld	(ix+#object.Ydirection),a
	pop	ix
	ret
}

:_8632
DATA $D4, $03, $C0, $03, $44, $04, $C0, $03
:_863a
DATA $00, $00, $F6, $FF, $C0, $FE, $00, $FC, $60, $FE, $80, $FD, $C0, $FD, $00, $FF
:_864a
DATA $20, $00, $F6, $FF, $40, $01, $00, $FC, $A0, $01, $80, $FD, $40, $02, $00, $FF

`sprite layout
:_865a
DATA $20, $22, $24, $26, $28, $FF
DATA $40, $42, $44, $46, $48, $FF
DATA $60, $62, $64, $66, $68, $FF

INCLUDE "platform_balance.oz80"
INCLUDE "badnick_jaws.oz80"
INCLUDE "trap_spikeball.oz80"
INCLUDE "trap_spear.oz80"
INCLUDE "trap_fireball.oz80"
INCLUDE "meta_water.oz80"
INCLUDE "powerup_bubbles.oz80"

`____________________________________________________________________________[$8ECA]___
`OBJECT: UNKNOWN

PROC    :_8eca                                  SECTION ::objects
{
	set	5, (ix+$18)
	xor	a;zero
	ld	(ix+#object.spriteLayout.lo),a;zero
	ld	(ix+#object.spriteLayout.hi),a;zero
	ld	a,(ix+$11)
	and	$0f
	jr	nz,._2
	call	:_LABEL_625_57
	ld	bc,$0020
	ld	d,$00
	and	$3f
	cp	$20
	jr	c,._1
	ld	bc,$ffe0
	ld	d,$ff
._1	ld	(ix+#object.Xspeed.lo),c
	ld	(ix+#object.Xspeed.hi),b
	ld	(ix+#object.Xdirection),d
._2	ld	(ix+#object.Yspeed.lo),$a0
	ld	(ix+#object.Yspeed.hi),$ff
	ld	(ix+#object.Ydirection),$ff
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	($.TEMP1),hl
	ex	de,hl
	ld	hl,($.CAMERA_X)
	ld	bc,$0008
	xor	a;zero
	sbc	hl,bc
	jr	nc,._3
	ld	l,a;zero
	ld	h,a;zero
._3	and	a
	sbc	hl,de
	jr	nc,._4
	ld	hl,($.CAMERA_X)
	ld	bc,$0100
	add	hl,bc
	and	a
	sbc	hl,de
	jr	c,._4
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	($.TEMP3),hl
	ex	de,hl
	ld	hl,($.D2DC)
	and	a
	sbc	hl,de
	jr	nc,._4
	ld	hl,($.CAMERA_Y)
	ld	bc,$fff0
	add	hl,bc
	and	a
	sbc	hl,de
	jr	nc,._4
	ld	hl,($.CAMERA_Y)
	ld	bc,$00c0
	add	hl,bc
	and	a
	sbc	hl,de
	jr	nc,._5
._4	ld	(ix+#object.type),$FF	        `remove object?
._5	ld	hl,$0000
	ld	($.TEMP4),hl
	ld	($.TEMP6),hl
	ld	a,$0c
	call	:_3581
	inc	(ix+$11)
	ret
}

INCLUDE "null.oz80"
INCLUDE "badnick_burrobot.oz80"
INCLUDE "platform_float.oz80"

`____________________________________________________________________________[$91EB]___

PROC    :_91eb                                  SECTION ::objects
{
	call	:findEmptyObject
	ret	c
	ld	c,$42
	ld	a,(ix+#object.type)
	cp	$41
	jr	nz,._1
	push	hl
	call	:_LABEL_625_57
	and	$0f
	ld	e,a
	ld	d,$00
	ld	hl,._9257
	add	hl,de
	ld	c,(hl)
	pop	hl
._1	ld	a,c
	ld	e,(ix+#object.X.lo)
	ld	d,(ix+#object.X.hi)
	ld	c,(ix+#object.Y.lo)
	ld	b,(ix+#object.Y.hi)
	push	ix
	push	hl
	pop	ix
	ld	(ix+#object.type),a
	xor	a;zero			        `set A to 0
	ld	(ix+#object.Xsubpixel),a;zero
	call	:_LABEL_625_57
	and	$0f
	ld	l,a
	ld	h,$00
	add	hl,de
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	(ix+#object.Ysubpixel),$00
	call	:_LABEL_625_57
	and	$0f
	ld	l,a
	xor	a;zero
	ld	h,a;zero
	add	hl,bc
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	ld	(ix+$11),a;zero
	ld	(ix+$12),a;zero
	ld	(ix+$18),a;zero
	ld	(ix+#object.Xspeed.lo),a;zero
	ld	(ix+#object.Xspeed.hi),a;zero
	ld	(ix+#object.Xdirection),a;zero
	pop	ix
	ret

._9257  DATA $42 $20 $20 $20 $42 $20 $20 $20 $42 $20 $20 $20 $42 $20 $20 $20

}

`____________________________________________________________________________[$9267]___
`OBJECT: boss (Labyrinth)

PROC    :doObjectCode_boss_labyrinth            SECTION ::objects
{
	set	5, (ix+$18)
	ld	(ix+#object.width),  32
	ld	(ix+#object.height), 28
	call	:_7ca6
	ld	(ix+#object.spriteLayout.lo),._9493.lo
	ld	(ix+#object.spriteLayout.hi),._9493.hi
	bit	0,(ix+$18)
	jr	nz,._1
	
	ld	hl,$02d0
	ld	de,$0290
	call	:_7c8c
	
	set	1,(iy+#vars.flags9)
	
	`UNKNOWN
	ld	hl,$e508
	ld	de,$2000
	ld	a,12
	call	:decompressArt
	
	ld	hl,:S1_BossPalette
	ld	a,%00000010
	call	:loadPaletteOnInterrupt
	xor	a;zero
	ld	($.D2EC),a;zero
	
	ld	a,#index_music_boss1
	rst	:rst_playMusic
	
	set	0,(ix+$18)
._1	ld	a,(ix+$11)
	and	a
	jr	nz,._2
	ld	a,(ix+$13)
	add	a,a
	add	a,a
	ld	e,a
	ld	d,$00
	ld	hl,._947b
	add	hl,de
	ld	a,(hl)
	ld	(ix+#object.X.lo),a
	inc	hl
	ld	a,(hl)
	inc	hl
	ld	(ix+#object.X.hi),a
	ld	a,(hl)
	inc	hl
	ld	(ix+#object.Y.lo),a
	ld	a,(hl)
	inc	hl
	ld	(ix+#object.Y.hi),a
	inc	(ix+$11)
	jp	._
	
._2	dec	a
	jr	nz,._5
	ld	a,(ix+$13)
	and	a
	jr	nz,._3
	ld	(ix+#object.Yspeed.lo),$80
	ld	(ix+#object.Yspeed.hi),$ff
	ld	(ix+#object.Ydirection),$ff
	jp	._4
	
._3	ld	(ix+#object.Yspeed.lo),$80
	ld	(ix+#object.Yspeed.hi),$00
	ld	(ix+#object.Ydirection),$00
._4	ld	hl,._9487
	ld	a,(ix+$13)
	add	a,a
	ld	e,a
	ld	d,$00
	add	hl,de
	ld	a,(hl)
	inc	hl
	ld	h,(hl)
	ld	l,a
	ld	e,(ix+#object.Y.lo)
	ld	d,(ix+#object.Y.hi)
	and	a
	sbc	hl,de
	jp	nz,._
	inc	(ix+$11)
	ld	(ix+$12),$00
	jp	._
	
._5	dec	a
	jp	nz,._6
	xor	a;zero
	ld	(ix+#object.Yspeed.lo),a;zero
	ld	(ix+#object.Yspeed.hi),a;zero
	ld	(ix+#object.Ydirection),a;zero
	inc	(ix+$12)
	ld	a,(ix+$12)
	cp	$64
	jp	nz,._
	inc	(ix+$11)
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$000f
	add	hl,de
	ld	($.TEMP1),hl
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	bc,$0022
	add	hl,bc
	ld	($.TEMP3),hl
	ld	a,(ix+$13)
	and	a
	jp	z,._9432
	ld	a,($.D2EC)
	cp	$08
	jp	nc,._
	call	:findEmptyObject
	jp	c,._
	push	ix
	push	hl
	pop	ix
	xor	a;zero			        `set A to 0
	ld	(ix+#object.type),$2F	        `unknown object
	ld	hl,($.TEMP1)
	ld	(ix+#object.Xsubpixel),a;zero
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	hl,($.TEMP3)
	ld	(ix+#object.Ysubpixel),a;zero
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	ld	(ix+$18),a;zero
	ld	(ix+#object.Xspeed.lo),a;zero
	ld	(ix+#object.Xspeed.hi),a;zero
	ld	(ix+#object.Xdirection),a;zero
	ld	(ix+#object.Yspeed.lo),a;zero
	ld	(ix+#object.Yspeed.hi),a;zero
	ld	(ix+#object.Ydirection),a;zero
	pop	ix
	jp	._
	
._6	ld	a,(ix+$13)
	and	a
	jr	nz,._7
	ld	(ix+#object.Yspeed.lo),$80
	ld	(ix+#object.Yspeed.hi),$00
	ld	(ix+#object.Ydirection),$00
	jp	._8
	
._7	ld	(ix+#object.Yspeed.lo),$80
	ld	(ix+#object.Yspeed.hi),$ff
	ld	(ix+#object.Ydirection),$ff
._8	ld	hl,$948d
	ld	a,(ix+$13)
	add	a,a
	ld	e,a
	ld	d,$00
	add	hl,de
	ld	a,(hl)
	inc	hl
	ld	h,(hl)
	ld	l,a
	ld	e,(ix+#object.Y.lo)
	ld	d,(ix+#object.Y.hi)
	xor	a;zero
	sbc	hl,de
	jr	nz,._
	ld	(ix+$11),a;zero
	inc	(ix+$13)
	ld	a,(ix+$13)
	cp	$03
	jr	c,._
	ld	(ix+$13),$00
._	ld      hl,$00a2
	ld	($.D216),hl
	call	:_77be
	ld	a,($.D2EC)
	cp	$08
	ret	nc
	bit	7,(ix+#object.Ydirection)
	ret	z
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	($.TEMP1),hl
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	($.TEMP3),hl
	ld	hl,$0010
	ld	($.TEMP4),hl
	ld	hl,$0030
	ld	($.TEMP6),hl
	ld	a,($.FRAMECOUNT)
	and	$02
	call	:_3581
	ret
	
._9432	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$0004
	add	hl,de
	ld	($.TEMP1),hl
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	de,$fffa
	add	hl,de
	ld	($.TEMP3),hl
	ld	hl,$ff00
	ld	($.TEMP4),hl
	ld	hl,$ff00
	ld	($.TEMP6),hl
	ld	c,$04
	call	:_85d1
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$0020
	add	hl,de
	ld	($.TEMP1),hl
	ld	hl,$0100
	ld	($.TEMP4),hl
	ld	c,$04
	call	:_85d1
	ld	a,$01
	rst	:rst_playSFX
	jp	._
        
._947b  DATA $3C, $03, $60, $03, $EC, $02, $60, $02, $8C, $03, $60, $02
._9487  DATA $28, $03, $B0, $02, $B0
._948c  DATA $02, $60, $03, $60, $02, $60, $02

        `sprite layout
._9493  DATA $20, $22, $24, $26, $28, $FF
        DATA $40, $42, $44, $46, $48, $FF
        DATA $60, $62, $64, $66, $68, $FF
}

INCLUDE "unknown_94a5.oz80"
INCLUDE "unknown_96a8.oz80"
INCLUDE "unknown_96f8.oz80"
INCLUDE "platform_flipper.oz80"
INCLUDE "platform_bumper.oz80"
INCLUDE "unknown_9b75.oz80"
INCLUDE "unknown_9be8.oz80"

`____________________________________________________________________________[$9C70]___
`OBJECT: UNKNOWN

PROC    :_9c70                                  SECTION ::objects
{
	ld	(ix+#object.Xspeed.lo),$80
	ld	(ix+#object.Xspeed.hi),$fe
	ld	(ix+#object.Xdirection),$ff
	ld	(ix+#object.spriteLayout.lo),._9c87.lo
	ld	(ix+#object.spriteLayout.hi),._9c87.hi
	jp	:_9be8._9bfc

        `sprite layout
._9c87  DATA $2C, $2E, $FF, $FF, $FF, $FF
        DATA $FF
}

`____________________________________________________________________________[$9C8E]___
`OBJECT: flame thrower - scrap brain

PROC :doObjectCode_trap_flameThrower {
	set	5,(ix+$18)
	bit	0,(ix+$18)
	jr	nz,._1
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$000c
	add	hl,de
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	de,$0012
	add	hl,de
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	call	:_LABEL_625_57
	ld	(ix+$11),a
	set	0,(ix+$18)
._1	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	($.TEMP1),hl
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	($.TEMP3),hl
	ld	hl,$0000
	ld	($.TEMP4),hl
	ld	a,(ix+$11)
	srl	a
	srl	a
	srl	a
	srl	a
	ld	c,a
	ld	b,$00
	add	a,a
	ld	e,a
	ld	d,$00
	ld	hl,:_9d6a
	add	hl,bc
	ld	a,(hl)
	ld	(ix+#object.height),a
	ld	(ix+#object.width),$06
	ld	hl,:_9d4a
	add	hl,de
	ld	a,(hl)
	inc	hl
	ld	h,(hl)
	ld	l,a
	or	h
	jr	z,._2
	ld	a,(ix+$11)
	add	a,a
	add	a,a
	add	a,a
	and	$1f
	ld	e,a
	ld	d,$00
	add	hl,de
	ld	b,$04
	
.loop	push	bc
	ld	a,(hl)
	inc	hl
	ld	e,(hl)
	inc	hl
	ld	d,$00
	push	hl
	ld	($.TEMP6),de
	call	:_3581
	pop	hl
	pop	bc
	djnz	.loop
	
	ld	a,(ix+#object.height)
	and	a
	jr	z,._2
	ld	hl,$0202
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	call	nc,:_35fd
._2	inc	(ix+$11)
	xor	a;zero
	ld	(ix+#object.spriteLayout.lo),a;zero
	ld	(ix+#object.spriteLayout.hi),a;zero
	ld	a,(ix+$11)
	cp	$70
	ret	nz
	ld	a,$17
	rst	:rst_playSFX
	ret
}

:_9d4a
DATA $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $9A, $9D
DATA $BA, $9D, $DA, $9D, $7A, $9D, $7A, $9D, $7A, $9D, $DA, $9D, $BA, $9D, $9A, $9D
:_9d6a
DATA $00, $00, $00, $00, $00, $00, $00, $1B, $1F, $22, $25, $25, $25, $22, $1F, $1B
DATA $00, $15, $1E, $0E, $1E, $07, $1E, $00, $00, $17, $1E, $10, $1E, $09, $1E, $02
DATA $00, $19, $1E, $12, $1E, $0B, $1E, $04, $00, $1B, $1E, $14, $1E, $0D, $1E, $06
DATA $00, $0C, $1E, $08, $1E, $04, $1E, $00, $00, $0E, $1E, $0A, $1E, $06, $1E, $02
DATA $00, $10, $1E, $0C, $1E, $08, $1E, $04, $00, $11, $1E, $0E, $1E, $0A, $1E, $06
DATA $00, $0F, $1E, $0A, $1E, $05, $1E, $00, $00, $11, $1E, $0C, $1E, $07, $1E, $02
DATA $00, $13, $1E, $0E, $1E, $09, $1E, $04, $00, $15, $1E, $10, $1E, $0B, $1E, $06
DATA $00, $12, $1E, $0C, $1E, $06, $1E, $00, $00, $14, $1E, $0E, $1E, $08, $1E, $02
DATA $00, $16, $1E, $10, $1E, $0A, $1E, $04, $00, $18, $1E, $12, $1E, $0C, $1E, $06

`____________________________________________________________________________[$9DFA]___
`OBJECT: door - one way left (Scrap Brain)

PROC :doObjectCode_door_left {
	set	5,(ix+$18)
	call	:_9ed4
	ld	a,(ix+$11)
	cp	$28
	jr	nc,._2
	ld	hl,$0005
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	jr	c,._2
	ld	de,$0005
	ld	a,($.SONIC.Xdirection)
	and	a
	jp	m,._1
	ld	de,$ffec
._1	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	add	hl,de
	ld	($.SONIC.X),hl
	xor	a;zero
	ld	l;zero,a;zero
	ld	h;zero,a;zero
	ld	($.SONIC.Xspeed),hl;zero
	ld	($.SONIC.Xdirection),a;zero
._2	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$ffc8
	add	hl,de
	ld	de,($.SONIC.X)
	xor	a;zero
	sbc	hl,de
	jr	nc,._3
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	and	a
	sbc	hl,de
	jr	c,._3
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	de,$ffe0
	add	hl,de
	ld	de,($.SONIC.Y)
	xor	a;zero
	sbc	hl,de
	jr	nc,._3
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	bc,$0050
	add	hl,bc
	and	a
	sbc	hl,de
	jr	c,._3
	call	:_9eb4
	jr	._4
	
._3	call	:_9ec4
._4	ld	de,:_9f2b
._9e7e	ld	a,(ix+$11)
	and	$0f
	ld	c,a
	ld	b,$00
	ld	l,(ix+$12)
	ld	h,(ix+$13)
	and	a
	sbc	hl,bc
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	ld	a,(ix+$11)
	srl	a
	srl	a
	srl	a
	srl	a
	and	$03
	add	a,a
	ld	c,a
	add	a,a
	add	a,a
	add	a,a
	add	a,c
	ld	c,a
	ld	b,$00
	ex	de,hl
	add	hl,bc
	ld	(ix+#object.spriteLayout.lo),l
	ld	(ix+#object.spriteLayout.hi),h
	ret
}

`____________________________________________________________________________[$9EB4]___

PROC :_9eb4 {
	ld	a,(ix+$11)
	cp	$30
	ret	nc
	inc	a
	ld	(ix+$11),a
	dec	a
	ret	nz
	ld	a,$19
	rst	:rst_playSFX
	ret
}

`____________________________________________________________________________[$9EC4]___

PROC :_9ec4 {
	ld	a,(ix+$11)
	and	a
	ret	z
	dec	a
	ld	(ix+$11),a
	cp	$2f
	ret	nz
	ld	a,$19
	rst	:rst_playSFX
	ret
}

`____________________________________________________________________________[$9ED4]___

PROC :_9ed4 {
	ld	(ix+#object.width),$04
	ld	a,(ix+$11)
	srl	a
	srl	a
	srl	a
	srl	a
	and	$03
	ld	e,a
	ld	a,$03
	sub	e
	add	a,a
	add	a,a
	add	a,a
	add	a,a
	ld	(ix+#object.height),a
	bit	0,(ix+$18)
	ret	nz
	ld	bc,$0000
	ld	de,$fff0
	call	:getFloorLayoutRAMPositionForObject
	ld	de,$0014
	ld	a,(hl)
	cp	$a3
	jr	z,._1
	ld	de,$0004
	set	1,(ix+$18)
._1	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	add	hl,de
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	a,(ix+#object.Y.lo)
	ld	(ix+$12),a
	ld	a,(ix+#object.Y.hi)
	ld	(ix+$13),a
	set	0,(ix+$18)
	ret
}

`sprite layout
:_9f2b
DATA $0A, $FF, $FF, $FF, $FF, $FF
DATA $3E, $FF, $FF, $FF, $FF, $FF
DATA $0A, $FF, $FF, $FF, $FF, $FF

DATA $3E, $FF, $FF, $FF, $FF, $FF
DATA $0A, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $0A, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF

`____________________________________________________________________________[$9F62]___
`OBJECT: door - one way right (Scrap Brain)

PROC :doObjectCode_door_right {
	set	5,(ix+$18)
	call	:_9ed4
	ld	a,(ix+$11)
	cp	$28
	jr	nc,._2
	ld	hl,$0005
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	jr	c,._2
	ld	de,$0005
	ld	a,($.SONIC.Xdirection)
	and	a
	jp	m,._1
	ld	de,$ffec
._1	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	add	hl,de
	ld	($.SONIC.X),hl
        
	xor	a;zero
	ld	($.SONIC.Xspeed.lo),a;zero
	ld	($.SONIC.Xspeed.hi),a;zero
	ld	($.SONIC.Xdirection),a;zero
        
._2	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$fff0
	add	hl,de
	ld	de,($.SONIC.X)
	xor	a;zero
	sbc	hl,de
	jr	nc,._3
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	bc,$0024
	add	hl,bc
	and	a
	sbc	hl,de
	jr	c,._3
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	de,$ffe0
	add	hl,de
	ld	de,($.SONIC.Y)
	xor	a;zero
	sbc	hl,de
	jr	nc,._3
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	bc,$0050
	add	hl,bc
	and	a
	sbc	hl,de
	jr	c,._3
	call	:_9eb4
	jr	._4
._3	call	:_9ec4
._4	ld	de,:_9fee
	jp	:doObjectCode_door_left._9e7e
}

`sprite layout
:_9fee
DATA $36, $FF, $FF, $FF, $FF, $FF
DATA $3E, $FF, $FF, $FF, $FF, $FF
DATA $36, $FF, $FF, $FF, $FF, $FF

DATA $3E, $FF, $FF, $FF, $FF, $FF
DATA $36, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $36, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF

`____________________________________________________________________________[$A025]___
`OBJECT: door (Scrap Brain)

PROC :doObjectCode_door {
	set	5,(ix+$18)
	call	:_9ed4
	ld	a,(ix+$11)
	cp	$28
	jr	nc,._2
	ld	hl,$0005
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	jr	c,._2
	ld	de,$0005
	ld	a,($.SONIC.Xdirection)
	and	a
	jp	m,._1
	ld	de,$ffec
._1	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	add	hl,de
	ld	($.SONIC.X),hl
        
	xor	a;zero
	ld	($.SONIC.Xspeed.lo),a;zero
	ld	($.SONIC.Xspeed.hi),a;zero
	ld	($.SONIC.Xdirection),a;zero
        
._2	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$ffc8
	add	hl,de
	ld	de,($.SONIC.X)
	xor	a;zero
	sbc	hl,de
	jr	nc,._3
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	bc,$0024
	add	hl,bc
	and	a
	sbc	hl,de
	jr	c,._3
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	de,$ffe0
	add	hl,de
	ld	de,($.SONIC.Y)
	xor	a;zero
	sbc	hl,de
	jr	nc,._3
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	bc,$0050
	add	hl,bc
	and	a
	sbc	hl,de
	jr	c,._3
	call	:_9eb4
	jr	._4
	
._3	call	:_9ec4
._4	ld	de,:_a0b1
	jp	:doObjectCode_door_left._9e7e
}

`sprite layout
:_a0b1
DATA $38, $FF, $FF, $FF, $FF, $FF
DATA $3E, $FF, $FF, $FF, $FF, $FF
DATA $38, $FF, $FF, $FF, $FF, $FF

DATA $3E, $FF, $FF, $FF, $FF, $FF
DATA $38, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $38, $FF, $FF, $FF, $FF, $FF

DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF

`____________________________________________________________________________[$A0E8]___
`OBJECT: electric sphere (Scrap Brain)

PROC :doObjectCode_trap_electric {
	set	5,(ix+$18)
	ld	(ix+#object.width),$30
	ld	(ix+#object.height),$10
	bit	0,(ix+$18)
	jr	nz,._1
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$0018
	add	hl,de
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	de,$0010
	add	hl,de
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	set	0,(ix+$18)
._1	ld	a,(ix+$11)
	cp	$64
	jr	c,._3
	jr	nz,._2
	ld	a,$13
	rst	:rst_playSFX
._2	ld	hl,$0000
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	call	nc,:_35fd
	ld	de,:_a173
	ld	bc,:_a167
	call	:_7c41
	jp	._5
	
._3	cp	$46
	jr	nc,._4
	xor	a;zero
	ld	(ix+#object.spriteLayout.lo),a;zero
	ld	(ix+#object.spriteLayout.hi),a;zero
	jp	._5
	
._4	ld	de,:_a173
	ld	bc,:_a16e
	call	:_7c41
._5	inc	(ix+$11)
	ld	a,(ix+$11)
	cp	$a0
	ret	c
	ld	(ix+$11),$00
	ret
}

:_a167
DATA $00, $01, $01, $01, $02, $01, $FF
:_a16e
DATA $02, $01, $03, $01, $FF

`sprite layout
:_a173
DATA $02, $04, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $FE, $FE, $FE, $FE, $02, $04
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $FE, $FE, $16, $18, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF

`____________________________________________________________________________[$A1AA]___
`OBJECT: badnick - Ball Hog (Scrap Brain)

PROC :doObjectCode_badnick_ballHog {
	ld	(ix+#object.width),$0a
	ld	(ix+#object.height),$20
	ld	hl,$0803
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	ld	hl,$0e00
	ld	($.TEMP1),hl
	call	nc,:_35e5
	ld	(ix+#object.Yspeed.lo),$00
	ld	(ix+#object.Yspeed.hi),$01
	ld	(ix+#object.Ydirection),$00
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$000a
	add	hl,de
	ex	de,hl
	ld	hl,($.SONIC.X)
	ld	bc,$000c
	add	hl,bc
	and	a
	sbc	hl,de
	jr	nc,._3
	ld	bc,:_a2d2
	ld	a,(ix+$11)
	cp	$eb
	jr	c,._2
	jr	nz,._1
	ld	(ix+$16),$00
._1	ld	bc,:_a2d7
._2	ld	de,:_a2da
	call	:_7c41
	ld	a,(ix+$11)
	cp	$ed
	jp	nz,._6
	call	:findEmptyObject
	jp	c,._6
	ld	e,(ix+#object.X.lo)
	ld	d,(ix+#object.X.hi)
	ld	c,(ix+#object.Y.lo)
	ld	b,(ix+#object.Y.hi)
	push	ix
	push	hl
	pop	ix
	xor	a;zero			        `set A to 0
	ld	(ix+#object.type),$1C	        `ball from the Ball Hog
	ld	(ix+#object.Xsubpixel),a;zero
	ld	(ix+#object.X.lo),e
	ld	(ix+#object.X.hi),d
	ld	hl,$0006
	add	hl,bc
	ld	(ix+#object.Ysubpixel),a;zero
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	ld	(ix+$11),a;zero
	ld	(ix+$16),a;zero
	ld	(ix+$17),a;zero
	ld	(ix+#object.Xspeed.lo),a;zero
	ld	(ix+#object.Xspeed.hi),$ff
	ld	(ix+#object.Xdirection),$ff
	ld	(ix+#object.Yspeed.lo),a;zero
	ld	(ix+#object.Yspeed.hi),$01
	ld	(ix+#object.Ydirection),a;zero
	pop	ix
	jp	._6
	
._3	ld	bc,:_a2d2
	ld	a,(ix+$11)
	cp	$eb
	jr	c,._5
	jr	nz,._4
	ld	(ix+$16),$00
._4	ld	bc,:_a2d7
._5	ld	de,:_a30b
	call	:_7c41
	ld	a,(ix+$11)
	cp	$ed
	jr	nz,._6
	call	:findEmptyObject
	jp	c,._6
	ld	e,(ix+#object.X.lo)
	ld	d,(ix+#object.X.hi)
	ld	c,(ix+#object.Y.lo)
	ld	b,(ix+#object.Y.hi)
	push	ix
	push	hl
	pop	ix
	xor	a;zero			        `set A to 0
	ld	(ix+#object.type),$1C	        `ball from the Ball Hog
	ld	(ix+#object.Xsubpixel),a;zero
	ld	(ix+#object.X.lo),e
	ld	(ix+#object.X.hi),d
	ld	hl,$0006
	add	hl,bc
	ld	(ix+#object.Ysubpixel),a;zero
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	ld	(ix+$11),a;zero
	ld	(ix+$16),a;zero
	ld	(ix+$17),a;zero
	ld	(ix+#object.Xspeed.lo),a;zero
	ld	(ix+#object.Xspeed.hi),$01
	ld	(ix+#object.Xdirection),a;zero
	ld	(ix+#object.Yspeed.lo),a;zero
	ld	(ix+#object.Yspeed.hi),$01
	ld	(ix+#object.Ydirection),a;zero
	pop	ix
._6	inc	(ix+$11)
	ret
}

:_a2d2
DATA $00, $1C, $01, $06, $FF
:_a2d7
DATA $02, $18, $FF

`sprite layout
:_a2da
DATA $40, $42, $FF, $FF, $FF, $FF
DATA $60, $62, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $44, $46, $FF, $FF, $FF, $FF
DATA $64, $66, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $40, $42, $FF, $FF, $FF, $FF
DATA $68, $6A, $FF, $FF, $FF, $FF
DATA $FF

:_a30b
DATA $50, $52, $FF, $FF, $FF, $FF
DATA $70, $72, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $4C, $4E, $FF, $FF, $FF, $FF
DATA $6C, $6E, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $50, $52, $FF, $FF, $FF, $FF
DATA $48, $4A, $FF, $FF, $FF, $FF
DATA $FF

`____________________________________________________________________________[$A33C]___
`OBJECT: UNKNOWN (ball from Ball Hog?)

PROC :_a33c {
	res	5,(ix+$18)
	ld	(ix+#object.width),$0a
	ld	(ix+#object.height),$0f
	ld	hl,$0101
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	call	nc,:_35fd
	bit	7,(ix+$18)
	jr	z,._1
	ld	(ix+#object.Yspeed.lo),$00
	ld	(ix+#object.Yspeed.hi),$fd
	ld	(ix+#object.Ydirection),$ff
._1	ld	l,(ix+#object.Yspeed.lo)
	ld	h,(ix+#object.Yspeed.hi)
	ld	a,(ix+#object.Ydirection)
	ld	de,$001f
	add	hl,de
	adc	a,$00
	ld	(ix+#object.Yspeed.lo),l
	ld	(ix+#object.Yspeed.hi),h
	ld	(ix+#object.Ydirection),a
	ld	a,(ix+$11)
	cp	$82
	jr	nc,._2
	ld	bc,:_a3b1
	ld	de,:_a3bb
	call	:_7c41
	jp	._4
	
._2	jr	nz,._3
	ld	(ix+$16),$00
	ld	a,$01
	rst	:rst_playSFX
._3	ld	bc,:_a3b4
	ld	de,:_a3bb
	call	:_7c41
._4	inc	(ix+$11)
	ld	a,(ix+$11)
	cp	$a5
	ret	c
	ld	(ix+#object.type),$FF	`remove object?
	ret
}

:_a3b1
DATA $00, $08, $FF
:_a3b4
DATA $01, $0C, $02, $0C, $03, $0C, $FF

`sprite layout
:_a3bb
DATA $20, $22, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $74, $76, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $78, $7A, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $7C, $7E, $FF, $FF, $FF, $FF
DATA $FF

`____________________________________________________________________________[$A3F8]___
`OBJECT: switch

PROC :doObjectCode_switch {
	ld	(ix+#object.width),$0a
	ld	(ix+#object.height),$11
	bit	0,(ix+$18)
	jr	nz,._1
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$0008
	add	hl,de
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	set	0,(ix+$18)
._1	ld	hl,$0001
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	jr	c,._3
	
	ld	a,($.SONIC.Ydirection)
	and	a
	jp	m,._3
	
	ld	(ix+#object.spriteLayout.lo),:_a48b.lo
	ld	(ix+#object.spriteLayout.hi),:_a48b.hi
	ld	a,($.LEVEL_SOLIDITY)
	cp	$03
	jr	nz,._2
	ld	(ix+#object.spriteLayout.lo),:_a49b.lo
	ld	(ix+#object.spriteLayout.hi),:_a49b.hi
._2	ld	bc,$0006
	ld	de,$0000
	call	:_LABEL_7CC1_12
	bit	1,(ix+$18)
	jr	nz,._4
	set	1,(ix+$18)
	ld	hl,$.D317
	call	:getLevelBitFlag
	ld	a,(hl)
	xor	c
	ld	(hl),a
	ld	a,$1a
	rst	:rst_playSFX
	jr	._4
	
._3	res	1,(ix+$18)
	ld	(ix+#object.spriteLayout.lo),:_a493.lo
	ld	(ix+#object.spriteLayout.hi),:_a493.hi
	ld	a,($.LEVEL_SOLIDITY)
	cp	$03
	jr	nz,._4
	ld	(ix+#object.spriteLayout.lo),$a3
	ld	(ix+#object.spriteLayout.hi),$a4
._4	xor	a;zero
	ld	(ix+#object.Yspeed.lo),a;zero
	ld	(ix+#object.Yspeed.hi),$02
	ld	(ix+#object.Ydirection),a;zero
	ret
}

`sprite layout
:_a48b
DATA $1A, $1C, $FF, $FF, $FF, $FF
DATA $FF, $FF
:_a493
DATA $3A, $3C, $FF, $FF, $FF, $FF
DATA $FF, $FF
:_a49b
DATA $38, $3A, $FF, $FF, $FF, $FF
DATA $FF, $FF, $34, $36, $FF, $FF
DATA $FF, $FF, $FF, $FF

`____________________________________________________________________________[$A4AB]___
`OBJECT: switch door

PROC :doObjectCode_door_switchActivated {
	set	5,(ix+$18)
	call	:_9ed4
	ld	a,(ix+$11)
	cp	$28
	jr	nc,._2
	ld	hl,$0005
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	jr	c,._2
	ld	de,$0005
	ld	a,($.SONIC.Xdirection)
	and	a
	jp	m,._1
	ld	de,$ffec
._1	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	add	hl,de
	ld	($.SONIC.X),hl
        
	xor	a;zero
	ld	($.SONIC.Xspeed.lo),a;zero
	ld	($.SONIC.Xspeed.hi),a;zero
	ld	($.SONIC.Xdirection),a;zero
	
._2	ld	hl,$.D317
	call	:getLevelBitFlag
	bit	1,(ix+$18)
	jr	z,._3
	ld	a,(hl)
	and	c
	jr	nz,._5
	jr	._4
	
._3	ld	a,(hl)
	and	c
	jr	z,._5
._4	ld	a,(ix+$11)
	cp	$30
	jr	nc,._6
	inc	a
	inc	a
	ld	(ix+$11),a
	jr	._6
	
._5	ld	a,(ix+$11)
	and	a
	jr	z,._6
	dec	a
	dec	a
	ld	(ix+$11),a
._6	ld	de,:_a51a
	jp	:doObjectCode_door_left._9e7e
}

`sprite layout
:_a51a
DATA $3E, $FF, $FF, $FF, $FF, $FF
DATA $38, $FF, $FF, $FF, $FF, $FF
DATA $3E, $FF, $FF, $FF, $FF, $FF

DATA $38, $FF, $FF, $FF, $FF, $FF
DATA $3E, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $3E, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF

`____________________________________________________________________________[$A551]___
`OBJECT: badnick - Caterkiller

PROC :doObjectCode_badnick_caterkiller {
	ld	(ix+#object.width),$06
	ld	(ix+#object.height),$10
	ld	a,($.FRAMECOUNT)
	and	$01
	jr	nz,._5
	ld	hl,:_a6b9
	bit	1,(ix+$18)
	jr	z,._1
	ld	hl,:_a769
._1	ld	e,(ix+$11)
	sla	e
	ld	d,$00
	add	hl,de
	ld	c,(hl)
	inc	hl
	ld	b,(hl)
	ld	l,(ix+#object.Xsubpixel)
	ld	h,(ix+#object.X.lo)
	ld	a,(ix+#object.X.hi)
	add	hl,bc
	bit	7,b
	jr	z,._2
	adc	a,$ff
	jr	._3
	
._2	adc	a,$00
._3	ld	(ix+#object.Xsubpixel),l
	ld	(ix+#object.X.lo),h
	ld	(ix+#object.X.hi),a
	ld	hl,:_a6e5
	add	hl,de
	ld	e,(hl)
	inc	hl
	ld	d,(hl)
	ld	l,(ix+$12)
	ld	h,(ix+$13)
	add	hl,de
	ld	(ix+$12),l
	ld	(ix+$13),h
	ld	c,$00
	bit	7,h
	jr	z,._4
	ld	c,$ff
._4	ld	(ix+$14),c
._5	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	($.TEMP1),hl
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	($.TEMP3),hl
	bit	1,(ix+$18)
	jr	nz,._7
	ld	hl,:_a711
	ld	e,(ix+$11)
	ld	d,$00
	add	hl,de
	ld	a,$24
	call	:_a688
	ld	a,$26
	call	:_a6a2
	ld	a,$26
	call	:_a688
	ld	a,$26
	call	:_a6a2
	ld	(ix+#object.width),$06
	ld	hl,$0802
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	ld	hl,$0000
	ld	($.TEMP1),hl
	jr	c,._6
	call	:_35e5
	jr	._9
	
._6	ld	(ix+#object.width),$16
	ld	hl,$0806
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	call	nc,:_35fd
	jr	._9
	
._7	ld	hl,:_a795
	ld	e,(ix+$11)
	ld	d,$00
	add	hl,de
	ld	a,$2a
	call	:_a688
	ld	a,$28
	call	:_a6a2
	ld	a,$28
	call	:_a688
	ld	a,$28
	call	:_a6a2
	ld	(ix+#object.width),$10
	ld	hl,$0401
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	jr	c,._8
	call	:_35fd
	jr	._9
	
._8	ld	(ix+#object.width),$16
	ld	hl,$0410
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	ld	hl,$0000
	ld	($.TEMP1),hl
	call	nc,:_35e5
._9	ld	(ix+#object.Yspeed.hi),$01
	ld	a,($.FRAMECOUNT)
	and	$01
	ret	nz
	inc	(ix+$11)
	ld	a,(ix+$11)
	cp	$16
	ret	c
	ld	(ix+$11),$00
	inc	(ix+$15)
	ld	a,(ix+$15)
	cp	$14
	ret	c
	ld	(ix+$15),$00
	ld	a,(ix+$18)
	xor	$02
	ld	(ix+$18),a
	ret
}

`____________________________________________________________________________[$A688]___

PROC :_a688 {
	push	hl
	ld	e,(hl)
	ld	d,$00
	ld	($.TEMP4),de
	ld	l,(ix+$13)
	ld	h,(ix+$14)
	ld	($.TEMP6),hl
	call	:_3581
	pop	hl
	ld	de,$0016
	add	hl,de
	ret
}

`____________________________________________________________________________[$A6A2]___

PROC :_a6a2 {
	push	hl
	ld	e,(hl)
	ld	d,$00
	ld	($.TEMP4),de
	ld	hl,$0000
	ld	($.TEMP6),hl
	call	:_3581
	pop	hl
	ld	de,$0016
	add	hl,de
	ret
}

:_a6b9
DATA $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
DATA $00 $00 $00 $00 $00 $00 $E0 $FF $E0 $FF $E0 $FF $E0 $FF $C0 $FF
DATA $C0 $FF $80 $FF $80 $FF $00 $FF $00 $FF $00 $FE
:_a6e5
DATA $00 $FF $80 $FF $80 $FF $C0 $FF $C0 $FF $E0 $FF $E0 $FF $F0 $FF
DATA $F0 $FF $F0 $FF $F0 $FF $10 $00 $10 $00 $10 $00 $10 $00 $20 $00
DATA $20 $00 $40 $00 $40 $00 $80 $00 $80 $00 $00 $01
:_a711
DATA $00 $01 $02 $02 $03 $03 $03 $03 $03 $03 $03 $03 $03 $03 $03 $03
DATA $03 $03 $02 $02 $01 $00 $07 $07 $07 $07 $07 $07 $07 $07 $07 $07
DATA $07 $07 $07 $07 $07 $07 $07 $07 $07 $07 $07 $07 $0E $0D $0C $0C
DATA $0B $0B $0B $0B $0B $0B $0B $0B $0B $0B $0B $0B $0B $0B $0C $0C
DATA $0D $0E $15 $13 $12 $11 $10 $10 $0F $0F $0F $0F $0F $0F $0F $0F
DATA $0F $0F $10 $10 $11 $12 $13 $15
:_a769
DATA $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
DATA $00 $00 $00 $00 $00 $00 $20 $00 $20 $00 $20 $00 $20 $00 $40 $00
DATA $40 $00 $80 $00 $80 $00 $00 $01 $00 $01 $00 $02
:_a795
DATA $15 $14 $13 $13 $12 $12 $12 $12 $12 $12 $12 $12 $12 $12 $12 $12
DATA $12 $12 $13 $13 $14 $15 $0E $0E $0E $0E $0E $0E $0E $0E $0E $0E
DATA $0E $0E $0E $0E $0E $0E $0E $0E $0E $0E $0E $0E $07 $08 $09 $09
DATA $0A $0A $0A $0A $0A $0A $0A $0A $0A $0A $0A $0A $0A $0A $09 $09
DATA $08 $07 $00 $02 $03 $04 $05 $05 $06 $06 $06 $06 $06 $06 $06 $06
DATA $06 $06 $05 $05 $04 $03 $02 $00

`____________________________________________________________________________[$A7ED]___
`OBJECT: boss (Scrap Brain)

PROC :doObjectCode_boss_scrapBrain {
	ld	(ix+#object.width),$1e
	ld	(ix+#object.height),$2f
	bit	0,(ix+$18)
	jr	nz,._1
	ld	hl,$0340
	ld	($.LEVEL_LEFT),hl
	
	`lock the screen at 1344 pixels, 42 blocks
	 `(near the boss lift in Scrap Brain Act 3)
	ld	hl,$0540
	ld	($.LEVEL_RIGHT),hl
	
	ld	hl,($.CAMERA_Y)
	ld	($.LEVEL_TOP),hl
	ld	($.LEVEL_BOTTOM),hl
	ld	hl,$0220
	ld	($.CAMERA_Y_GOTO),hl

	`UNKNOWN
	ld	hl,$ef3f
	ld	de,$2000
	ld	a,12
	call	:decompressArt

	ld	hl,:S1_BossPalette
	ld	a,%00000010
	call	:loadPaletteOnInterrupt
	
	ld	a,#index_music_boss1
	rst	:rst_playMusic
	
	set	0,(ix+$18)
._1	bit	1,(ix+$18)
	jr	nz,._4
	ld	hl,($.CAMERA_X)
	ld	($.LEVEL_LEFT),hl
	ld	de,:_baf9
	ld	bc,:_a9b7
	call	:_7c41
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,($.SONIC.X)
	xor	a;zero
	sbc	hl,de
	ld	de,$0040
	xor	a;zero
	ld	bc,($.SONIC.Xspeed)
	bit	7,b
	jr	nz,._2
	sbc	hl,de
	jr	c,._3
._2	ld	bc,$ff80
._3	inc	b
	ld	(ix+#object.Xspeed.lo),c
	ld	(ix+#object.Xspeed.hi),b
	ld	(ix+#object.Xdirection),a
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$05a0
	xor	a;zero
	sbc	hl,de
	jp	c,._9
	ld	l,a
	ld	h,a
	ld	(ix+#object.Xspeed.lo),a
	ld	(ix+#object.Xspeed.hi),a
	ld	($.SONIC.Xspeed),hl
	ld	($.SONIC.Xdirection),a
	set	1,(ix+$18)
	jp	._9
	
._4	bit	2,(ix+$18)
	jr	nz,._5
	
	ld	hl,$0530
	ld	de,$0220
	call	:_7c8c
	
	ld	(iy+#vars.joypad),$ff
	ld	hl,$05a0
	ld	(ix+#object.Xsubpixel),$00
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	(ix+#object.spriteLayout.lo),:_baf9.lo
	ld	(ix+#object.spriteLayout.hi),:_baf9.hi
	inc	(ix+$11)
	ld	a,(ix+$11)
	cp	$c0
	jp	c,._9
	set	2,(ix+$18)
	jp	._9
	
._5	bit	3,(ix+$18)
	jr	nz,._6
	ld	(iy+#vars.joypad),$ff
	xor	a;zero
	ld	(ix+#object.spriteLayout.lo),a;zero
	ld	(ix+#object.spriteLayout.hi),a;zero
	dec	(ix+$11)
	jp	nz,._9
	set	3,(ix+$18)
	jp	._9
	
._6	bit	4,(ix+$18)
	jr	nz,._8
	ld	de,($.SONIC.X)
	ld	hl,$0596
	and	a
	sbc	hl,de
	jr	nc,._9
	ld	hl,$05c0
	xor	a;zero
	sbc	hl,de
	jr	c,._9
	or	(ix+$11)
	jr	nz,._7
	ld	hl,($.SONIC.Y)
	ld	de,$028d
	xor	a;zero
	sbc	hl,de
	jr	c,._9
	ld	l;zero,a;zero
	ld	h;zero,a;zero
	ld	($.SONIC.Xspeed),hl;zero
	ld	($.SONIC.Xdirection),a;zero
._7	ld	a,$80
	ld	($.SONIC.unknown18),a
	ld	hl,$05a0
	ld	($.SONIC.X),hl
	ld	(iy+#vars.joypad),$ff
	ld	e,(ix+$11)
	ld	d,$00
	ld	hl,$028e
	xor	a;zero			        `set A to 0
	sbc	hl,de
	ld	($.SONIC.Ysubpixel),a;zero
	ld	($.SONIC.Y),hl
	ld	a,($.D2E8)
	ld	hl,($.D2E6)
	ld	($.SONIC.Yspeed),hl
	ld	($.SONIC.Ydirection),a
	inc	(ix+$11)
	ld	a,(ix+$11)
	cp	$c0
	jr	nz,._9
	ld	hl,($.CAMERA_X)
	inc	h
	ld	($.SONIC.X),hl
	set	4,(ix+$18)
	
	ld	a,#index_music_actComplete
	rst	:rst_playMusic
	
	ld	a,$a0
	ld	($.D289),a
	set	1,(iy+#vars.flags6)
	ret
	
._8	ld	a,(ix+$11)
	and	a
	jr	z,._9
	dec	(ix+$11)
._9	ld	e,(ix+$11)
	ld	d,$00
	ld	hl,$0280
	xor	a;zero
	sbc	hl,de
	ld	(ix+#object.Ysubpixel),a;zero
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	ld	e,(ix+$11)
	ld	d,$00
	ld	hl,$02af
	and	a
	sbc	hl,de
	ld	bc,($.CAMERA_Y)
	and	a
	sbc	hl,bc
	ex	de,hl
	ld	hl,$05a0
	ld	bc,($.CAMERA_X)
	and	a
	sbc	hl,bc
	ld	bc,:_a9c0		`address of sprite layout
	call	:processSpriteLayout
	ld	a,(ix+$11)
	and	$1f
	cp	$0f
	ret	nz
	ld	a,$19
	rst	:rst_playSFX
	ret
}

:_a9b7
DATA $03, $08, $04, $07, $05, $08, $04, $07, $FF

`sprite layout
:_a9c0
DATA $74, $76, $76, $78, $FF, $FF
DATA $FF

`____________________________________________________________________________[$A9C7]___
`OBJECT: meta - clouds (Sky Base)

PROC :doObjectCode_meta_clouds {
	set	5,(ix+$18)
	ld	a,(iy+#vars.spriteUpdateCount)
	ld	hl,($.SPRITES_CURRENT)
	push	af
	push	hl
	ld	a,($.D2DE)
	cp	$24
	jr	nc,._1
	ld	e,a
	ld	d,$00
	ld	hl,$.SPRITES
	add	hl,de
	ld	($.SPRITES_CURRENT),hl
	ld	a,($.D2A3)
	ld	c,a
	ld	de,($.D2A1)
	ld	l,(ix+#object.Ysubpixel)
	ld	h,(ix+#object.Y.lo)
	ld	a,(ix+#object.Y.hi)
	add	hl,de
	adc	a,c
	ld	l,h
	ld	h,a
	ld	bc,($.CAMERA_Y)
	and	a
	sbc	hl,bc
	ex	de,hl
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	bc,($.CAMERA_X)
	and	a
	sbc	hl,bc
	ld	bc,:_aa63		`address of sprite layout
	call	:processSpriteLayout
	ld	a,($.D2DE)
	add	a,$0c
	ld	($.D2DE),a
._1	pop	hl
	pop	af
	ld	($.SPRITES_CURRENT),hl
	ld	(iy+#vars.spriteUpdateCount),a
	ld	hl,($.CAMERA_X)
	ld	de,$ffe0
	add	hl,de
	ex	de,hl
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	and	a
	sbc	hl,de
	jr	nc,._2
	call	:_LABEL_625_57
	ld	b,$00
	add	a,a
	ld	c,a
	rl	b
	ld	hl,($.CAMERA_X)
	ld	de,$01b4
	add	hl,de
	add	hl,bc
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
._2	ld	(ix+#object.Xspeed.lo),$00
	ld	(ix+#object.Xspeed.hi),$fd
	ld	(ix+#object.Xdirection),$ff
	ld	(ix+#object.spriteLayout.lo),$00
	ld	(ix+#object.spriteLayout.hi),$00
	ret
}

`sprite layout
:_aa63
DATA $40, $42, $44, $46, $FF, $FF
DATA $FF

`____________________________________________________________________________[$AA6A]___
`OBJECT: propeller (Sky Base)

PROC :doObjectCode_trap_propeller {
	set	5,(ix+$18)
	ld	(ix+#object.width),$05
	ld	(ix+#object.height),$14
	bit	0,(ix+$18)
	jr	nz,._1
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$000f
	add	hl,de
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	de,$fffa
	add	hl,de
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	set	0,(ix+$18)
._1	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	($.TEMP1),hl
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	($.TEMP3),hl
	ld	e,(ix+$11)
	ld	d,$00
	ld	hl,:_ab01
	add	hl,de
	ld	e,(hl)
	inc	hl
	ld	d,(hl)
	ld	b,$02
	
.loop	push	bc
	ld	a,(de)
	ld	l,a
	ld	h,$00
	ld	($.TEMP4),hl
	inc	de
	ld	a,(de)
	ld	l,a
	ld	($.TEMP6),hl
	inc	de
	ld	a,(de)
	inc	de
	and	a
	jp	m,._2
	push	de
	call	:_3581
	pop	de
._2	pop	bc
	djnz	.loop
	
	ld	hl,$0202
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	call	nc,:_35fd
	ld	(ix+#object.spriteLayout.lo),$00
	ld	(ix+#object.spriteLayout.hi),$00
	ld	a,(ix+$11)
	inc	a
	inc	a
	cp	$08
	ld	(ix+$11),a
	ret	c
	ld	(ix+$11),$00
	ret
}

:_ab01
DATA $09, $AB, $0F, $AB, $15, $AB, $1B, $AB, $00, $00, $1C, $00, $18, $3C, $00, $00
DATA $1E, $00, $18, $3E, $00, $00, $38, $00, $18, $3A, $00, $08, $1A, $00, $00, $FF

`____________________________________________________________________________[$AB21]___
`OBJECT: badnick - bomb (Sky Base)

PROC :doObjectCode_badnick_bomb {
	ld	(ix+#object.width),$0c
	ld	(ix+#object.height),$10
	ld	a,(ix+$11)
	cp	$64
	jr	nc,._1
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$ffc8
	add	hl,de
	ex	de,hl
	ld	hl,($.SONIC.X)
	and	a
	sbc	hl,de
	jr	c,._1
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$002c
	add	hl,de
	ex	de,hl
	ld	hl,($.SONIC.X)
	and	a
	sbc	hl,de
	jr	nc,._1
	ld	(ix+$11),$64
._1	ld	a,(ix+$11)
	cp	$1e
	jr	nc,._2
	ld	(ix+#object.Xspeed.lo),$f8
	ld	(ix+#object.Xspeed.hi),$ff
	ld	(ix+#object.Xdirection),$ff
	ld	de,:_ad0b
	ld	bc,:_acf1
	call	:_7c41
	jp	._7
	
._2	ld	a,(ix+$11)
	cp	$64
	jp	c,._4
	ld	(ix+#object.Xspeed.lo),$00
	ld	(ix+#object.Xspeed.hi),$00
	ld	(ix+#object.Xdirection),$00
	cp	$66
	jr	nc,._3
	ld	de,:_ad0b
	ld	bc,:_ad01
	call	:_7c41
	jp	._7
	
._3	ld	(ix+#object.spriteLayout.lo),:_ad53.lo
	ld	(ix+#object.spriteLayout.hi),:_ad53.hi
	cp	$67
	jp	nz,._7
	ld	hl,$fffe
	ld	($.TEMP4),hl
	ld	hl,$fffc
	ld	($.TEMP6),hl
	call	:findEmptyObject
	jp	c,._8
	ld	de,$0000
	ld	c,e
	ld	b,d
	call	:_ac96
	ld	hl,$0003
	ld	($.TEMP4),hl
	ld	hl,$fffc
	ld	($.TEMP6),hl
	call	:findEmptyObject
	jp	c,._8
	ld	de,$0008
	ld	bc,$0000
	call	:_ac96
	ld	hl,$fffe
	ld	($.TEMP4),hl
	ld	hl,$fffe
	ld	($.TEMP6),hl
	call	:findEmptyObject
	jp	c,._8
	ld	de,$0000
	ld	bc,$0008
	call	:_ac96
	ld	hl,$0003
	ld	($.TEMP4),hl
	ld	hl,$fffe
	ld	($.TEMP6),hl
	call	:findEmptyObject
	jp	c,._8
	ld	de,$0008
	ld	bc,$0008
	call	:_ac96
	ld	(ix+#object.type),$FF	`remove object?
	ld	a,$1b
	rst	:rst_playSFX
	jr	._8
	
._4	cp	$23
	jr	nc,._5
	xor	a;zero
	ld	(ix+#object.Xspeed.lo),a;zero
	ld	(ix+#object.Xspeed.hi),a;zero
	ld	(ix+#object.Xdirection),a;zero
	ld	de,:_ad0b
	ld	bc,:_acf6
	call	:_7c41
	jr	._7
	
._5	ld	a,(ix+$11)
	cp	$41
	jr	nc,._6
	ld	(ix+#object.Xspeed.lo),$08
	ld	(ix+#object.Xspeed.hi),$00
	ld	(ix+#object.Xdirection),$00
	ld	de,:_ad0b
	ld	bc,:_acf9
	call	:_7c41
	jr	._7
	
._6	ld	(ix+#object.Xspeed.lo),$00
	ld	(ix+#object.Xspeed.hi),$00
	ld	(ix+#object.Xdirection),$00
	ld	de,:_ad0b
	ld	bc,:_acfe
	call	:_7c41
._7	ld	(ix+#object.Yspeed.lo),$80
	ld	(ix+#object.Yspeed.hi),$00
	ld	(ix+#object.Ydirection),$00
._8	ld	hl,$0202
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	call	nc,:_35fd
	ld	a,($.FRAMECOUNT)
	and	$3f
	ret	nz
	inc	(ix+$11)
	ld	a,(ix+$11)
	cp	$46
	ret	nz
	ld	(ix+$11),$00
	ret
}

`____________________________________________________________________________[$AC96]___

PROC :_ac96 {
	push	ix
	push	hl
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	add	hl,de
	ex	de,hl
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	add	hl,bc
	ld	c,l
	ld	b,h
	pop	ix
	xor	a;zero			        `set A to 0
	ld	(ix+#object.type),$0D	        `unknown object
	ld	(ix+#object.Xsubpixel),a;zero
	ld	(ix+#object.X.lo),e
	ld	(ix+#object.X.hi),d
	ld	(ix+#object.Ysubpixel),a;zero
	ld	(ix+#object.Y.lo),c
	ld	(ix+#object.Y.hi),b
	ld	(ix+$11),a;zero
	ld	(ix+$13),$24
	ld	(ix+$14),a;zero
	ld	(ix+$15),a;zero
	ld	(ix+$16),a;zero
	ld	(ix+$17),a;zero
	ld	(ix+#object.Xspeed.lo),a;zero
	ld	hl,($.TEMP4)
	ld	(ix+#object.Xspeed.hi),l
	ld	(ix+#object.Xdirection),h
	ld	(ix+#object.Yspeed.lo),a;zero
	ld	hl,($.TEMP6)
	ld	(ix+#object.Yspeed.hi),l
	ld	(ix+#object.Ydirection),h
	pop	ix
	ret
}

:_acf1
DATA $00, $20, $01, $20, $FF
:_acf6
DATA $01, $20, $FF
:_acf9
DATA $02, $20, $03, $20, $FF
:_acfe
DATA $03, $20, $FF
:_ad01
DATA $01, $02, $04, $02, $FF, $03, $02, $05, $02, $FF

`sprite layout
:_ad0b
DATA $0A, $0C, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $0E, $10, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $2A, $2C, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $2E, $30, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

:_ad53
DATA $12, $14, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
DATA $32, $34, $FF, $FF, $FF, $FF
DATA $FF

`____________________________________________________________________________[$AD6C]___
`OBJECT: canon (Sky Base)

PROC :doObjectCode_trap_cannon{
	set	5,(ix+$18)
	bit	0,(ix+$18)
	jr	nz,._1
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$fffc
	add	hl,de
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	call	:_LABEL_625_57
	ld	(ix+$11),a
	set	0,(ix+$18)
._1	ld	a,(ix+$11)
	cp	$64
	jr	nz,._2
	call	:findEmptyObject
	jr	c,._2
	push	ix
	ld	e,(ix+#object.X.lo)
	ld	d,(ix+#object.X.hi)
	ld	c,(ix+#object.Y.lo)
	ld	b,(ix+#object.Y.hi)
	push	hl
	pop	ix
	xor	a;zero			        `set A to 0
	ld	(ix+#object.type),$34	        `unknown object
	ld	(ix+#object.Xsubpixel),a;zero
	ld	hl,$0004
	add	hl,de
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	(ix+#object.Ysubpixel),a;zero
	ld	hl,$0010
	add	hl,bc
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	pop	ix
	ld	a,$1c
	rst	:rst_playSFX
	ld	(ix+$12),$18
	ld	(ix+$16),$00
	ld	(ix+$17),$00
._2	ld	a,(ix+$12)
	and	a
	jr	z,._3
	ld	de,:_ae04
	ld	bc,:_adfd
	call	:_7c41
	dec	(ix+$12)
	inc	(ix+$11)
	ret
	
._3	ld	(ix+#object.spriteLayout.lo),a
	ld	(ix+#object.spriteLayout.hi),a
	inc	(ix+$11)
	ret
}

:_adfd
DATA $00, $08, $01, $08, $02, $08, $FF

`sprite layout
:_ae04
DATA $FE, $FF, $FF, $FF, $FF, $FF
DATA $74, $76, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $FE, $FF, $FF, $FF, $FF, $FF
DATA $78, $7A, $FF, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF

DATA $FE, $FF, $FF, $FF, $FF, $FF
DATA $7C, $7E, $FF, $FF, $FF, $FF
DATA $FF

`____________________________________________________________________________[$AE35]___
`OBJECT: cannon ball (Sky Base)

PROC :doObjectCode_trap_cannonBall {
	set	5,(ix+$18)
	ld	(ix+#object.width),$0c
	ld	(ix+#object.height),$0c
	ld	hl,($.CAMERA_X)
	ld	de,$0110
	add	hl,de
	ld	e,(ix+#object.X.lo)
	ld	d,(ix+#object.X.hi)
	and	a
	sbc	hl,de
	jr	nc,._1
	ld	(ix+#object.type),$FF	`remove object?
._1	ld	hl,$0202
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	call	nc,:_35fd
	xor	a;zero
	ld	(ix+#object.Xspeed.lo),$80
	ld	(ix+#object.Xspeed.hi),$02
	ld	(ix+#object.Xdirection),a;zero
	ld	(ix+#object.Yspeed.lo),a;zero
	ld	(ix+#object.Yspeed.hi),a;zero
	ld	(ix+#object.Ydirection),a;zero
	ld	(ix+#object.spriteLayout.lo),:_ae81.lo
	ld	(ix+#object.spriteLayout.hi),:_ae81.hi
	ret
}

`sprite layout
:_ae81
DATA $02, $04, $FF, $FF, $FF, $FF
DATA $FF

`____________________________________________________________________________[$AE88]___
`OBJECT: badnick - Unidos (Sky Base)

PROC :doObjectCode_badnick_unidos {
	set	5,(ix+$18)
	bit	0,(ix+$18)
	jr	nz,._1
	ld	(ix+$11),$00
	ld	(ix+$12),$2a
	ld	(ix+$13),$52
	ld	(ix+$14),$7c
	set	0,(ix+$18)
._1	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,($.SONIC.X)
	and	a
	sbc	hl,de
	jr	c,._2
	ld	(ix+#object.Xspeed.lo),$f8
	ld	(ix+#object.Xspeed.hi),$ff
	ld	(ix+#object.Xdirection),$ff
	ld	(ix+#object.spriteLayout.lo),:_b0d5.lo
	ld	(ix+#object.spriteLayout.hi),:_b0d5.hi
	ld	hl,$ff80
	ld	($.D216),hl
	call	:_af98
	ld	(ix+$16),$01
	jr	._3
	
._2	ld	(ix+#object.Xspeed.lo),$08
	ld	(ix+#object.Xspeed.hi),$00
	ld	(ix+#object.Xdirection),$00
	ld	(ix+#object.spriteLayout.lo),:_b0e7.lo
	ld	(ix+#object.spriteLayout.hi),:_b0e7.hi
	ld	hl,$0080
	ld	($.D216),hl
	call	:_af98
	ld	(ix+$16),$ff
._3	ld	(ix+#object.width),$1c
	ld	(ix+#object.height),$1c
	ld	hl,$1212
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	ld	hl,$1010
	ld	($.TEMP1),hl
	call	nc,:_35e5
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	($.TEMP1),hl
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	($.TEMP3),hl
	push	ix
	pop	hl
	ld	de,$0011
	add	hl,de
	
	ld	b,$04
.loop	push	bc
	push	hl
	ld	a,(hl)
	cp	$fe
	jr	z,._4
	and	$fe
	ld	e,a
	ld	d,$00
	ld	hl,:_b031
	add	hl,de
	push	hl
	ld	e,(hl)
	ld	($.TEMP4),de
	inc	hl
	ld	e,(hl)
	ld	($.TEMP6),de
	ld	a,$24
	call	:_3581
	pop	hl
	ld	a,(hl)
	inc	a
	inc	a
	ld	($.TEMP6),a
	add	a,$04
	ld	(ix+#object.width),a
	inc	hl
	ld	a,(hl)
	inc	a
	inc	a
	ld	($.TEMP7),a
	add	a,$04
	ld	(ix+#object.height),a
	call	:_LABEL_3956_11
	call	nc,:_35fd
._4	pop	hl
	pop	bc
	ld	a,(hl)
	cp	$fe
	jr	z,._6
	add	a,(ix+$16)
	cp	$ff
	jr	nz,._5
	ld	a,$a3
	jr	._6
	
._5	cp	$a4
	jr	nz,._6
	xor	a;zero
._6	ld	(hl),a;zero
	inc	hl
	djnz	.loop
	
	ld	a,($.FRAMECOUNT)
	and	$07
	ret	z
	ld	a,(ix+$15)
	cp	$c8
	ret	nc
	inc	(ix+$15)
	ret
}

`____________________________________________________________________________[$AF98]___

PROC :_af98 {
	ld	a,(ix+$15)
	cp	$c8
	ret	nz
	ld	a,($.LEVEL_SOLIDITY)
	cp	$03
	ret	nz
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	de,$ffd0
	add	hl,de
	ld	de,($.SONIC.Y)
	and	a
	sbc	hl,de
	ret	nc
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	bc,$002c
	add	hl,bc
	and	a
	sbc	hl,de
	ret	c
	push	ix
	pop	hl
	ld	de,$0011
	add	hl,de
	ld	b,$04
	
.loop	push	bc
	push	hl
	ld	a,(hl)
	cp	$4a
	call	z,:_afdb
	pop	hl
	pop	bc
	inc	hl
	djnz	.loop
	
	ret
}

`____________________________________________________________________________[$AFDB]___

PROC :_afdb {
	ld	(hl),$fe
	call	:findEmptyObject
	ret	c
	push	ix
	ld	e,(ix+#object.X.lo)
	ld	d,(ix+#object.X.hi)
	ld	c,(ix+#object.Y.lo)
	ld	b,(ix+#object.Y.hi)
	push	hl
	pop	ix
	xor	a;zero			        `set A to 0
	ld	(ix+#object.type),$36	        `unknown object
	ld	(ix+#object.Xsubpixel),a;zero
	ld	hl,$0012
	add	hl,de
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	(ix+#object.Ysubpixel),a;zero
	ld	hl,$001e
	add	hl,bc
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	ld	hl,($.D216)
	ld	(ix+#object.Xspeed.lo),l
	ld	(ix+#object.Xspeed.hi),h
	xor	a;zero
	bit	7,h
	jr	z,._1
	ld	a,$ff
._1	ld	(ix+#object.Xdirection),a
	xor	a;zero
	ld	(ix+#object.Yspeed.lo),a;zero
	ld	(ix+#object.Yspeed.hi),a;zero
	ld	(ix+#object.Ydirection),a;zero
	pop	ix
	ret
}

:_b031
DATA $0C, $03, $0D, $03, $0E, $03, $0E, $04, $0F, $04, $10, $04, $10, $05, $11, $05
DATA $11, $06, $12, $06, $12, $07, $13, $07, $13, $08, $13, $09, $14, $09, $14, $0A
DATA $14, $0B, $15, $0B, $15, $0C, $15, $0D, $15, $0E, $15, $0F, $15, $10, $15, $11
DATA $14, $11, $14, $12, $14, $13, $13, $13, $13, $14, $13, $15, $12, $15, $12, $16
DATA $11, $16, $11, $17, $10, $17, $10, $18, $0F, $18, $0E, $18, $0E, $19, $0D, $19
DATA $0C, $19, $0B, $19, $0A, $19, $09, $19, $09, $18, $08, $18, $07, $18, $07, $17
DATA $06, $17, $06, $16, $05, $16, $05, $15, $04, $15, $04, $14, $04, $13, $03, $13
DATA $03, $12, $03, $11, $02, $11, $02, $10, $02, $0F, $02
:_b0ac
DATA $0E, $02, $0D, $02, $0C, $02, $0B, $03, $0B, $03, $0A, $03, $09, $04, $09, $04
DATA $08, $04, $07, $05, $07, $05, $06, $06, $06, $06, $05, $07, $05, $07, $04, $08
DATA $04, $09, $04, $09, $03, $0A, $03, $0B, $03

`sprite layout
:_b0d5
DATA $FE, $FF, $FF, $FF, $FF, $FF
DATA $FE, $26, $28, $FF, $FF, $FF
DATA $FF, $FF, $FF, $FF, $FF, $FF
:_b0e7
DATA $FE, $FF, $FF, $FF, $FF, $FF
DATA $FE, $20, $22, $FF, $FF, $FF
DATA $FF

`____________________________________________________________________________[$B0F4]___
`OBJECT: UNKNOWN

PROC :_b0f4 {
	set	5,(ix+$18)
	ld	(ix+#object.spriteLayout.lo),$00
	ld	(ix+#object.spriteLayout.hi),$00
	ld	(ix+#object.width),$04
	ld	(ix+#object.height),$0a
	ld	hl,$0602
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	call	nc,:_35fd
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	($.TEMP1),hl
	ex	de,hl
	ld	hl,($.CAMERA_X)
	ld	bc,$fff0
	add	hl,bc
	and	a
	sbc	hl,de
	jr	nc,._1
	ld	hl,($.CAMERA_X)
	ld	bc,$0110
	add	hl,bc
	and	a
	sbc	hl,de
	jr	c,._1
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	($.TEMP3),hl
	ex	de,hl
	ld	hl,($.CAMERA_Y)
	ld	bc,$fff0
	add	hl,bc
	and	a
	sbc	hl,de
	jr	nc,._1
	ld	hl,($.CAMERA_Y)
	ld	bc,$00d0
	add	hl,bc
	and	a
	sbc	hl,de
	jr	c,._1
	ld	hl,$0000
	ld	($.TEMP4),hl
	ld	($.TEMP6),hl
	ld	a,$24
	call	:_3581
	ret
	
._1	ld	(ix+#object.type),$FF	`remove object?
	ret
}

`____________________________________________________________________________[$B16C]___
`OBJECT: rotating turret (Sky Base)

PROC :doObjectCode_trap_turretRotating {
	set	5,(ix+$18)
	bit	0,(ix+$18)
	jr	nz,._1
	call	:_LABEL_625_57
	and	$07
	ld	(ix+$11),a
	set	0,(ix+$18)
._1	ld	(ix+#object.spriteLayout.lo),$00
	ld	(ix+#object.spriteLayout.hi),$00
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	($.TEMP1),hl
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	($.TEMP3),hl
	ld	a,(ix+$11)
	add	a,a
	add	a,a
	add	a,a
	ld	e,a
	ld	d,$00
	ld	hl,:_b227
	add	hl,de
	ld	b,$02
	
.loop	push	bc
	ld	d,$00
	ld	e,(hl)
	bit	7,e
	jr	z,._2
	ld	d,$ff
._2	ld	($.TEMP4),de
	inc	hl
	ld	d,$00
	ld	e,(hl)
	bit	7,e
	jr	z,._3
	ld	d,$ff
._3	ld	($.TEMP6),de
	inc	hl
	ld	a,(hl)
	inc	hl
	inc	hl
	cp	$ff
	jr	z,._4
	push	hl
	call	:_3581
	pop	hl
._4	pop	bc
	djnz	.loop
	
	ld	a,($.FRAMECOUNT)
	and	$3f
	jr	nz,._5
	ld	a,(ix+$11)
	inc	a
	and	$07
	ld	(ix+$11),a
._5	inc	(ix+$12)
	ld	a,(ix+$12)
	cp	$1a
	ret	nz
	ld	(ix+$12),$00
	ld	a,(ix+$11)
	add	a,a
	ld	e,a
	add	a,a
	add	a,e
	ld	e,a
	ld	d,$00
	ld	hl,:_b267
	add	hl,de
	ld	e,(hl)
	inc	hl
	ld	d,(hl)
	inc	hl
	ld	($.TEMP4),de
	ld	e,(hl)
	inc	hl
	ld	d,(hl)
	ld	($.TEMP6),de
	inc	hl
	ld	e,(hl)
	ld	d,$00
	bit	7,e
	jr	z,._6
	dec	d
._6	inc	hl
	ld	c,(hl)
	ld	b,$00
	bit	7,c
	jr	z,._7
	dec	b
._7	call	:_b5c2
	ret
}

:_b227
DATA $08, $F8, $66, $00, $00, $00, $FF, $00, $0C, $FA, $70, $00, $14, $FA, $72, $00
DATA $0F, $07, $4C, $00, $17, $07, $4E, $00, $0D, $0C, $6C, $00, $15, $0C, $6E, $00
DATA $08, $0F, $64, $00, $00, $00, $FF, $00, $FC, $0C, $68, $00, $04, $0C, $6A, $00
DATA $F9, $07, $48, $00, $01, $07, $4A, $00, $FB, $F9, $50, $00, $03, $F9, $52, $00   
:_b267
DATA $00, $00, $00, $FE, $08, $F0, $00, $01, $00, $FF, $18, $F8, $00, $02, $00, $00
DATA $1E, $07, $00, $01, $00, $01, $16, $16, $00, $00, $00, $02, $08, $20, $00, $FF
DATA $00, $01, $F8, $18, $00, $FE, $00, $00, $F2, $07, $00, $FF, $00, $FF, $F7, $F6

`____________________________________________________________________________[$B297]___
`OBJECT: flying platform (Sky Base)

PROC :doObjectCode_platform_flyingRight {
	set	5, (ix+$18)
	bit	0, (ix+$18)
	jr	nz,._1
	
	ld	a,(ix+#object.Ysubpixel)
	ld	(ix+$12),a
	
	ld	a,(ix+#object.Y.lo)
	ld	(ix+$13),a
	
	ld	a,(ix+#object.Y.hi)
	ld	(ix+$14),a
	
	set	0,(ix+$18)
	
._1	ld	a,($.D2A3)
	ld	c,a
	ld	de,($.D2A1)
	ld	l,(ix+$12)
	ld	h,(ix+$13)
	ld	a,(ix+$14)
	add	hl,de
	adc	a,c
	ld	(ix+#object.Ysubpixel),l
	ld	(ix+#object.Y.lo),h
	ld	(ix+#object.Y.hi),a
	
	ld	a,($.SONIC.Ydirection)
	and	a
	jp	m,._2
	
	ld	(ix+#object.width),$1e
	ld	(ix+#object.height),$10
	ld	hl,$0a02
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	jr	c,._2
	
	ld	hl,$0030
	ld	($.D26B),hl
	ld	hl,$0030
	ld	($.D26D),hl
	ld	bc,$0010
	ld	de,$0000
	call	:_LABEL_7CC1_12
	ld	l,(ix+#object.Xsubpixel)
	ld	h,(ix+#object.X.lo)
	ld	a,(ix+#object.X.hi)
	ld	de,$0080
	add	hl,de
	adc	a,$00
	ld	(ix+#object.Xsubpixel),l
	ld	(ix+#object.X.lo),h
	ld	(ix+#object.X.hi),a
	ld	hl,($.SONIC.Xsubpixel)
	ld	a,($.SONIC.X.hi)
	add	hl,de
	adc	a,$00
	ld	($.SONIC.Xsubpixel),hl
	ld	($.SONIC.X.hi),a
._2	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	($.TEMP1),hl
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	($.TEMP3),hl
	ld	hl,$fff8
	ld	($.TEMP4),hl
	ld	e,(ix+$11)
	ld	d,$00
	ld	hl,:_b388
	add	hl,de
	ld	b,$02
	
.loop	push	bc
	ld	e,(hl)
	ld	d,$00
	inc	hl
	ld	($.TEMP6),de
	ld	a,(hl)
	inc	hl
	cp	$ff
	jr	z,._3
	push	hl
	call	:_3581
	pop	hl
._3	pop	bc
	djnz	.loop
	
	ld	(ix+#object.spriteLayout.lo),:_b37b.lo
	ld	(ix+#object.spriteLayout.hi),:_b37b.hi
	ld	a,(ix+$11)
	add	a,$04
	ld	(ix+$11),a
	cp	$10
	ret	c
	ld	(ix+$11),$00
	ret
}

`sprite layout
:_b37b
DATA $FE, $FF, $FF, $FF, $FF, $FF
DATA $36, $36, $36, $36, $FF, $FF
DATA $FF

:_b388
DATA $08, $1C, $18, $3C, $08, $1E, $18, $3E, $08, $38, $18, $3A, $0C, $1A, $00, $FF

INCLUDE "trap_spikewall.oz80"

`____________________________________________________________________________[$B46D]___
`OBJECT: fixed turret (Sky Base)

PROC    :doObjectCode_trap_turretFixed          SECTION ::objects
{
	set	5,(ix+$18)
	bit	0,(ix+$18)
	jr	nz,._1
	ld	bc,$0000
	ld	e,c
	ld	d,b
	call	:getFloorLayoutRAMPositionForObject
	ld	a,(hl)
	sub	$3c
	cp	$04
	ret	nc
	ld	(ix+$11),a
	set	0,(ix+$18)
._1	inc	(ix+$12)
	ld	a,(ix+$12)
	bit	6,a
	ret	nz
	and	$0f
	ret	nz
	ld	a,(ix+$11)
	add	a,a
	ld	e,a
	add	a,a
	add	a,a
	add	a,e
	ld	e,a
	ld	d,$00
	ld	hl,._b4e6
	add	hl,de
	ld	e,(hl)
	inc	hl
	ld	d,(hl)
	inc	hl
	ld	($.TEMP4),de
	ld	e,(hl)
	inc	hl
	ld	d,(hl)
	inc	hl
	ld	($.TEMP6),de
	ld	e,(hl)
	inc	hl
	ld	d,(hl)
	inc	hl
	ld	c,(hl)
	inc	hl
	ld	b,(hl)
	inc	hl
	exx	
	ld	e,(ix+#object.X.lo)
	ld	d,(ix+#object.X.hi)
	ld	hl,($.SONIC.X)
	and	a
	sbc	hl,de
	ld	a,h
	exx	
	cp	(hl)
	ret	nz
	inc	hl
	exx	
	ld	e,(ix+#object.Y.lo)
	ld	d,(ix+#object.Y.hi)
	ld	hl,($.SONIC.Y)
	and	a
	sbc	hl,de
	ld	a,h
	exx	
	cp	(hl)
	ret	nz
	call	:_b5c2
	ret

._b4e6  DATA $80 $FE $80 $FE $00 $00 $F8 $FF $FF $FF $80 $01 $80 $FE $18 $00
        DATA $F8 $FF $00 $FF $80 $FE $80 $01 $00 $00 $10 $00 $FF $00 $80 $01
        DATA $80 $01 $18 $00 $10 $00 $00 $00   
}

`____________________________________________________________________________[$B50E]___
`OBJECT: flying platform - up/down (Sky Base)

PROC    :doObjectCode_platform_flyingUpDown     SECTION ::objects
{
	set	5,(ix+$18)
	ld	hl,:_b37b
	ld	a,($.LEVEL_SOLIDITY)
	cp	$01
	jr	nz,._1
	ld	hl,._b5b5
._1	ld	(ix+#object.spriteLayout.lo),l
	ld	(ix+#object.spriteLayout.hi),h
	ld	a,$50
	ld	($.D216),a
	call	._b53b
	inc	(ix+$11)
	ld	a,(ix+$11)
	cp	$a0
	ret	c
	ld	(ix+$11),$00
	ret

        `--------------------------------------------------------------------[$B53B]---

._b53b 	ld	a,($.D216)
	ld	l,a
	ld	de,$0010
	ld	c,$00
	ld	a,(ix+$11)
	cp	l
	jr	c,._2
	dec	c
	ld	de,$fff0
._2	ld	l,(ix+#object.Yspeed.lo)
	ld	h,(ix+#object.Yspeed.hi)
	ld	a,(ix+#object.Ydirection)
	add	hl,de
	adc	a,c
	ld	(ix+#object.Yspeed.lo),l
	ld	(ix+#object.Yspeed.hi),h
	ld	(ix+#object.Ydirection),a
	ld	a,h
	and	a
	jp	p,._3
	ld	a,l
	cpl	
	ld	l,a
	ld	a,h
	cpl	
	ld	h,a
	inc	hl
	ld	a,h
	cp	$02
	jr	c,._4
	ld	(ix+#object.Yspeed.lo),$00
	ld	(ix+#object.Yspeed.hi),$fe
	ld	(ix+#object.Ydirection),$ff
	jr	._4
	
._3	cp	$02
	jr	c,._4
	ld	(ix+#object.Yspeed.lo),$00
	ld	(ix+#object.Yspeed.hi),$02
	ld	(ix+#object.Ydirection),$00
	
._4	ld	a,($.SONIC.Ydirection)
	and	a
	ret	m
	
	ld	(ix+#object.width),$1e
	ld	(ix+#object.height),$1c
	ld	hl,$0802
	ld	($.TEMP6),hl
	call	:_LABEL_3956_11
	ret	c
	ld	e,(ix+#object.Yspeed.lo)
	ld	d,(ix+#object.Yspeed.hi)
	ld	bc,$0010
	call	:_LABEL_7CC1_12
	ret
        
        `sprite layout
._b5b5  DATA $FE, $FF, $FF, $FF, $FF, $FF
        DATA $6C, $6E, $6C, $6E, $FF, $FF
        DATA $FF
}

`____________________________________________________________________________[$B5C2]___

PROC    :_b5c2                                  SECTION ::objects
{
	push	bc
	push	de
	call	:findEmptyObject
	pop	de
	pop	bc
	ret	c
	push	ix
	push	hl
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	add	hl,de
	ex	de,hl
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	add	hl,bc
	ld	c,l
	ld	b,h
	pop	ix
	xor	a;zero			        `set A to 0
	ld	(ix+#object.type),$0D	        `unknown object?
	ld	(ix+#object.Xsubpixel),a;zero
	ld	(ix+#object.X.lo),e
	ld	(ix+#object.X.hi),d
	ld	(ix+#object.Ysubpixel),a;zero
	ld	(ix+#object.Y.lo),c
	ld	(ix+#object.Y.hi),b
	ld	(ix+$11),a;zero
	ld	(ix+$13),a;zero
	ld	(ix+$14),a;zero
	ld	(ix+$15),a;zero
	ld	(ix+$16),a;zero
	ld	(ix+$17),a;zero
	ld	hl,($.TEMP4)
	bit	7,h
	jr	z,._1
	ld	a,$ff
._1	ld	(ix+#object.Xspeed.lo),l
	ld	(ix+#object.Xspeed.hi),h
	ld	(ix+#object.Xdirection),a
	xor	a;zero
	ld	hl,($.TEMP6)
	bit	7,h
	jr	z,._2
	ld	a,$ff
._2	ld	(ix+#object.Yspeed.lo),l
	ld	(ix+#object.Yspeed.hi),h
	ld	(ix+#object.Ydirection),a
	pop	ix
	ld	a,$01
	rst	:rst_playSFX
	ret
}

`____________________________________________________________________________[$B634]___
`OBJECT: boss (Sky Base)

PROC    :doObjectCode_boss_skyBase              SECTION ::objects
{
	ld	(ix+#object.width),$1e
	ld	(ix+#object.height),$2f
	set	5,(ix+$18)
	bit	2,(ix+$18)
	jp	nz,._b821
	call	:_7ca6
	call	._b7e6
	bit	0,(ix+$18)
	jr	nz,._1
	
	ld	hl,$0350
	ld	de,$0120
	call	:_7c8c
	
	ld	l,(ix+#object.X.lo)
	ld	h,(ix+#object.X.hi)
	ld	de,$0008
	add	hl,de
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	(ix+$11),l
	ld	(ix+$12),h
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	ld	de,$0010
	add	hl,de
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	ld	(ix+$13),l
	ld	(ix+$14),h
	xor	a;zero
	ld	($.D2EC),a;zero
	
	ld	a,#index_music_boss3
	rst	:rst_playMusic
	
	set	4,(iy+#vars.unknown0)
	set	0,(ix+$18)
._1	ld	a,(ix+$15)
	and	a
	jp	nz,._4
	call	._b99f
	ld	a,($.FRAMECOUNT)
	and	$07
	jp	nz,._8
	ld	a,(ix+$16)
	cp	$1c
	jr	nc,._2
	inc	(ix+$17)
	ld	a,(ix+$17)
	cp	$02
	jp	c,._3
._2	ld	(ix+$17),$00
._3	inc	(ix+$16)
	ld	a,(ix+$16)
	cp	$28
	jp	c,._8
	ld	(ix+$16),$00
	inc	(ix+$15)
	jp	._8
	
._4	dec	a
	jr	nz,._5
	ld	(ix+#object.Yspeed.lo),$40
	ld	(ix+#object.Yspeed.hi),$fe
	ld	(ix+#object.Ydirection),$ff
	inc	(ix+$15)
	ld	l,(ix+$11)
	ld	h,(ix+$12)
	ld	de,$0004
	add	hl,de
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	(ix+#object.spriteLayout.lo),:_bb1d.lo
	ld	(ix+#object.spriteLayout.hi),:_bb1d.hi
	jp	._8
	
._5	dec	a
	jp	nz,._7
	ld	l,(ix+#object.Yspeed.lo)
	ld	h,(ix+#object.Yspeed.hi)
	ld	a,(ix+#object.Ydirection)
	ld	de,$000e
	add	hl,de
	adc	a,$00
	ld	c,a
	jp	m,._6
	ld	a,h
	cp	$02
	jr	c,._6
	ld	hl,$0200
._6	ld	(ix+#object.Yspeed.lo),l
	ld	(ix+#object.Yspeed.hi),h
	ld	(ix+#object.Ydirection),c
	ld	(ix+#object.spriteLayout.lo),:_bb1d.lo
	ld	(ix+#object.spriteLayout.hi),:_bb1d.hi
	ld	l,(ix+#object.Y.lo)
	ld	h,(ix+#object.Y.hi)
	dec	hl
	ld	e,(ix+$13)
	ld	d,(ix+$14)
	and	a
	sbc	hl,de
	jr	c,._8
	ld	(ix+#object.Y.lo),e
	ld	(ix+#object.Y.hi),d
	xor	a;zero
	ld	(ix+$16),a;zero
	ld	(ix+#object.Yspeed.lo),a;zero
	ld	(ix+#object.Yspeed.hi),a;zero
	ld	(ix+#object.Ydirection),a;zero
	inc	(ix+$15)
	jp	._8
	
._7	dec	a
	jp	nz,._8
	ld	l,(ix+$11)
	ld	h,(ix+$12)
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	a,(ix+$16)
	and	a
	call	z,._b9d5
	ld	(ix+$17),$02
	set	1,(ix+$18)
	call	._b99f
	inc	(ix+$16)
	ld	a,(ix+$16)
	cp	$12
	jr	c,._8
	res	1,(ix+$18)
	xor	a;zero
	ld	(ix+$15),a;zero
	ld	(ix+$16),a;zero
	
._8	ld	hl,$ba31
	bit	1,(ix+$18)
	jr	z,._9
	ld	hl,._ba3b
._9	ld	de,$.TEMP1
	ldi	
	ldi	
	ldi	
	ldi	
	ldi	
	ldi	
	ldi	
	ldi	
	ld	a,(hl)
	inc	hl
	push	hl
	call	:_3581
	ld	hl,($.TEMP4)
	ld	de,$0008
	add	hl,de
	ld	($.TEMP4),hl
	pop	hl
	ld	a,(hl)
	call	:_3581
	ld	a,($.D2EC)
	cp	$0c
	ret	c
	xor	a;zero
	ld	(ix+$11),a;zero
	ld	(ix+$16),a;zero
	ld	(ix+$17),a;zero
	set	2,(ix+$18)
	res	4,(iy+#vars.unknown0)
	
	ld	a,#index_music_scrapBrain
	rst	:rst_playMusic
	
	ld	a,$21
	rst	:rst_playSFX
	ret
        
        `--------------------------------------------------------------------[$B7E6]---

._b7e6	ld	a,($.D2B1)
	and	a
	ret	nz
	bit	0,(iy+#vars.scrollRingFlags)
	ret	nz
	ld	a,($.SONIC.unknown18)
	rrca	
	jr	c,._10
	and	$02
	ret	z
._10	ld	hl,($.SONIC.X)
	ld	de,$0410
	and	a
	sbc	hl,de
	ret	c
	ld	hl,$fd00
	ld	a,$ff
	ld	($.SONIC.Xspeed),hl
	ld	($.SONIC.Xdirection),a
	ld	hl,$.D2B1
	ld	(hl),$18
	inc	hl
	ld	(hl),$0c
	inc	hl
	ld	(hl),$3f
	ld	a,$01
	rst	:rst_playSFX
	ld	hl,$.D2EC
	inc	(hl)
	ret

        `--------------------------------------------------------------------[$B821]---

._b821	bit	3,(ix+$18)
	jp	nz,._20
	res	5,(ix+$18)
	ld	a,(ix+$11)
	cp	$0f
	jr	nc,._11
	add	a,a
	add	a,a
	ld	e,a
	add	a,a
	add	a,e
	ld	e,a
	ld	d,$00
	ld	hl,$ba45
	add	hl,de
	ld	e,(hl)
	inc	hl
	ld	d,(hl)
	inc	hl
	ld	($.D2AB),de
	ld	e,(hl)
	inc	hl
	ld	d,(hl)
	inc	hl
	ld	($.D2AD),de
	ld	($.D2AF),hl
	inc	(ix+$11)
	ld	a,(ix+$11)
	cp	$0f
	jr	nz,._11
	set	5,(iy+#vars.flags0)
	res	1,(iy+#vars.flags2)
	
	`something to do with scrolling
	ld	hl,$0550
	ld	($.LEVEL_RIGHT),hl
	
._11	ld	e,(ix+#object.X.lo)
	ld	d,(ix+#object.X.hi)
	ld	hl,$05e0
	xor	a;zero
	sbc	hl,de
	jr	nc,._12
	ld	c,a;zero
	ld	b,a;zero
	jp	._15
	
._12	ex	de,hl
	ld	de,($.SONIC.X)
	xor	a;zero
	sbc	hl,de
	ld	de,$0040
	xor	a;zero
	ld	bc,($.SONIC.Xspeed)
	bit	7,b
	jr	nz,._13
	sbc	hl,de
	jr	c,._14
._13	ld	bc,$ff80
._14	inc	b
._15	ld	(ix+#object.Xspeed.lo),c
	ld	(ix+#object.Xspeed.hi),b
	ld	(ix+#object.Xdirection),a
	ld	a,(ix+$17)
	cp	$06
	jr	nz,._16
	ld	a,(ix+$16)
	dec	a
	jr	nz,._16
	bit	7,(ix+$18)
	jr	z,._16
	ld	(ix+#object.Yspeed.lo),$00
	ld	(ix+#object.Yspeed.hi),$ff
	ld	(ix+#object.Ydirection),$ff
._16	ld	de,$0017
	ld	bc,$0036
	call	:getFloorLayoutRAMPositionForObject
	ld	e,(hl)
	ld	d,$00
	ld	hl,$3f28
	add	hl,de
	ld	a,(hl)
	and	$3f
	and	a
	jr	z,._17
	bit	7,(ix+$18)
	jr	z,._17
	ld	(ix+#object.Yspeed.lo),$80
	ld	(ix+#object.Yspeed.hi),$fd
	ld	(ix+#object.Ydirection),$ff
._17	ld	de,$0000
	ld	bc,$0008
	call	:getFloorLayoutRAMPositionForObject
	ld	a,(hl)
	cp	$49
	jr	nz,._18
	bit	7,(ix+$18)
	jr	z,._18
	xor	a;zero
	ld	(ix+$16),a;zero
	ld	(ix+$17),a;zero
	ld	(ix+#object.Xspeed.lo),a;zero
	ld	(ix+#object.Xspeed.hi),a;zero
	ld	(ix+#object.Xdirection),a;zero
	ld	(ix+$11),$e0
	ld	(ix+$12),$05
	ld	(ix+$13),$60
	ld	(ix+$14),$01
	
	ld	hl,$0550
	ld	de,$0120
	call	:_7c8c
	
	set	3,(ix+$18)
	jp	._20
	
._18	ld	l,(ix+#object.Yspeed.lo)
	ld	h,(ix+#object.Yspeed.hi)
	ld	a,(ix+#object.Ydirection)
	ld	de,$000e
	add	hl,de
	adc	a,$00
	ld	c,a
	jp	m,._19
	ld	a,h
	cp	$02
	jr	c,._19
	ld	hl,$0200
._19	ld	(ix+#object.Yspeed.lo),l
	ld	(ix+#object.Yspeed.hi),h
	ld	(ix+#object.Ydirection),c
	ld	bc,._ba28
	ld	de,:_baf9
	call	:_7c41
	ret
	
._20	ld	(iy+#vars.joypad),$ff
	call	._b99f
	ld	a,(ix+$16)
	cp	$30
	jr	nc,._22
	ld	c,a
	ld	a,($.FRAMECOUNT)
	and	$07
	jr	nz,._21
	ld	a,(ix+$17)
	inc	a
	and	$01
	ld	(ix+$17),a
	inc	(ix+$16)
._21	ld	a,c
	cp	$2c
	ret	c
	ld	(ix+#object.spriteLayout.lo),:_bb77.lo
	ld	(ix+#object.spriteLayout.hi),:_bb77.hi
	ret
	
._22	xor	a;zero
	ld	(ix+#object.spriteLayout.lo),a;zero
	ld	(ix+#object.spriteLayout.hi),a;zero
	inc	(ix+$16)
	ld	a,(ix+$16)
	cp	$70
	ret	c
	ld	(ix+#object.type),$FF	        `remove object?
	ret
	
        `--------------------------------------------------------------------[$B99F]---

._b99f	ld	hl,._ba1c
	ld	a,(ix+$17)
	add	a,a
	add	a,a
	ld	e,a
	ld	d,$00
	ld	b,d
	add	hl,de
	ld	c,(hl)
	inc	hl
	ld	e,(hl)
	inc	hl
	ld	a,(hl)
	inc	hl
	ld	h,(hl)
	ld	l,a
	ld	(ix+#object.spriteLayout.lo),l
	ld	(ix+#object.spriteLayout.hi),h
	ld	l,(ix+$11)
	ld	h,(ix+$12)
	add	hl,bc
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	l,(ix+$13)
	ld	h,(ix+$14)
	add	hl,de
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	ret

        `--------------------------------------------------------------------[$B9D5]---

._b9d5  bit	5,(iy+#vars.unknown0)
	ret	nz
	call	:findEmptyObject
	ret	c
	push	ix
	push	hl
	pop	ix
	xor	a;zero			        `set A to 0
	ld	(ix+#object.type),$47	        `unknown object
	ld	(ix+#object.Xsubpixel),a;zero
	ld	hl,$0420
	ld	(ix+#object.X.lo),l
	ld	(ix+#object.X.hi),h
	ld	(ix+#object.Ysubpixel),a;zero
	ld	hl,$012f
	ld	(ix+#object.Y.lo),l
	ld	(ix+#object.Y.hi),h
	ld	(ix+$11),a;zero
	ld	(ix+$18),a;zero
	ld	(ix+#object.Xspeed.lo),a;zero
	ld	(ix+#object.Xspeed.hi),a;zero
	ld	(ix+#object.Xdirection),a;zero
	ld	(ix+#object.Yspeed.lo),a;zero
	ld	(ix+#object.Yspeed.hi),a;zero
	ld	(ix+#object.Ydirection),a;zero
	pop	ix
	ret

._ba1b  DATA $C9		                `unused?
._ba1c  DATA $00 $00 $F9 $BA $00 $02 $0B $BB $00 $07 $0B $BB
._ba28  DATA $03 $08 $04 $07 $05 $08 $04 $07 $FF $30 $04 $A0 $01 $00 $00
._ba37  DATA $00 $00 $20 $22                    `unused, or part of above?
._ba3b  DATA $30 $04 $A0 $01 $00 $00 $00 $00 $24 $26 $20 $04 $60 $01 $37 $10
        DATA $38 $10 $4A $10 $4B $10 $30 $04 $60 $01 $28 $10 $19 $10 $4C $10
        DATA $4D $10 $40 $04 $60 $01 $00 $10 $2D $10 $4E $10 $4F $10 $20 $04
        DATA $70 $01 $00 $00 $00 $00 $00 $00 $00 $00 $30 $04 $70 $01 $00 $00
        DATA $00 $00 $00 $00 $00 $00 $40 $04 $70 $01 $00 $00 $00 $00 $00 $00
        DATA $00 $00 $20 $04 $80 $01 $00 $00 $00 $00 $00 $00 $00 $00 $30 $04
        DATA $80 $01 $00 $00 $00 $00 $00 $00 $00 $00 $40 $04 $80 $01 $00 $00
        DATA $00 $00 $00 $00 $00 $00 $20 $04 $90 $01 $00 $00 $00 $00 $00 $00
        DATA $00 $00 $30 $04 $90 $01 $00 $00 $00 $00 $00 $00 $00 $00 $40 $04
        DATA $90 $01 $00 $00 $00 $00 $00 $00 $00 $00 $20 $04 $A0 $01 $5A $10
        DATA $5B $10 $37 $10 $3B $10 $30 $04 $A0 $01 $5C $10 $5D $10 $3C $10
        DATA $00 $10 $40 $04 $A0 $01 $5E $10 $5F $10 $00 $10 $2D $10
}

INCLUDE "boss_running.oz80"

`part of sky boss only
TABLE   :_bb1d                                  SECTION ::objects
{
        DATA $10 $12 $14 $16 $FF $FF
        DATA $30 $32 $34 $FE $FF $FF
        DATA $50 $52 $54 $FE $FF $FF

        DATA $18 $1A $1C $1E $FF $FF
        DATA $FE $3A $3C $3E $FF $FF
        DATA $FE $64 $66 $68 $FF $FF

        DATA $18 $1A $1C $1E $FF $FF
        DATA $FE $3A $3C $3E $FF $FF
        DATA $FE $6A $6C $6E $FF $FF

        DATA $18 $1A $1C $1E $FF $FF
        DATA $FE $3A $3C $3E $FF $FF
        DATA $70 $72 $5A $5C $5E $FF

        DATA $00 $0A $0C $0E $FF $FF
        DATA $28 $2A $2C $2E $FF $FF
        DATA $00 $4A $4C $4E $FF $FF
}

`also part of sky base boss only
TABLE   :_bb77                                  SECTION ::objects
{
        DATA $FE $FF $FF $FF $FF $FF
        DATA $FE $44 $46 $FF $FF $FF
        DATA $FF
}

`____________________________________________________________________________[$BB84]___
`OBJECT: boss - electric beam (Sky Base)

PROC    :doObjectCode_boss_electricBeam         SECTION ::objects
{
	set	5,(ix+$18)
	ld	hl,$0008
	ld	($.D26B),hl
	bit	0,(ix+$18)
	jr	nz,._1

	`UNKNOWN
	ld	hl,$ef3f
	ld	de,$2000
	ld	a,$0c
	call	:decompressArt

	ld	(ix+$12),$01
	set	0,(ix+$18)
._1	ld	hl,$0390
	ld	($.TEMP1),hl
	ld	l,(ix+$11)
	ld	h,$00
	ld	($.TEMP4),hl
	ld	l,h
	ld	($.TEMP6),hl
	ld	de,$011a
	ld	hl,._bcdd
	call	._bca5
	ld	e,(ix+$11)
	ld	d,$00
	ld	($.TEMP4),de
	ld	de,$01d2
	ld	hl,._bcdd
	call	._bca5
	bit	4,(iy+#vars.unknown0)
	ret	z
	bit	1,(ix+$18)
	jr	z,._2
	ld	a,($.FRAMECOUNT)
	bit	0,a
	ret	nz
	and	$02
	ld	e,a
	ld	d,$00
	ld	hl,._bcc7
	add	hl,de
	ld	b,$0a
	ld	de,$0130
	
.loop	push	bc
	push	de
	call	._bca5
	pop	de
	push	hl
	ld	hl,$0010
	add	hl,de
	ex	de,hl
	pop	hl
	pop	bc
	djnz	.loop
	
	ld	hl,$0390
	ld	c,(ix+$11)
	ld	b,$00
	add	hl,bc
	ld	c,l
	ld	b,h
	ld	hl,$000c
	add	hl,bc
	ld	de,($.SONIC.X)
	and	a
	sbc	hl,de
	jr	c,._2
	ld	hl,$000e
	add	hl,de
	and	a
	sbc	hl,bc
	jr	c,._2
	bit	0,(iy+#vars.scrollRingFlags)
	call	z,:_35fd
	
._2	ld	a,($.D2EC)
	cp	$06
	jr	nc,._5
	bit	1,(ix+$18)
	jr	nz,._3
	ld	a,(ix+$11)
	inc	a
	ld	(ix+$11),a
	cp	$80
	ret	c
	ld	a,($.FRAMECOUNT)
	ld	c,a
	and	$01
	ret	nz
	set	1,(ix+$18)
	ret
	
._3	ld	a,($.FRAMECOUNT)
	and	$0f
	jr	nz,._4
	ld	a,$13
	rst	:rst_playSFX
._4	dec	(ix+$11)
	ret	nz
	ld	(ix+$11),$00
	res	1,(ix+$18)
	ret
	
._5	ld	hl,($.SONIC.X)
	ld	e,(ix+#object.X.lo)
	ld	d,(ix+#object.X.hi)
	and	a
	sbc	hl,de
	jr	nc,._6
	ld	a,(ix+$11)
	and	a
	jr	z,._7
	dec	(ix+$11)
	jr	._7
	
._6	ld	a,(ix+$11)
	cp	$80
	jr	nc,._7
	inc	(ix+$11)
._7	res	1,(ix+$18)
	ld	a,($.FRAMECOUNT)
	ld	c,a
	and	$40
	ret	nz
	ld	a,($.D2EC)
	cp	$06
	ret	z
	set	1,(ix+$18)
	ld	a,c
	and	$1f
	ret	nz
	ld	a,$13
	rst	:rst_playSFX
	ret
        
        `--------------------------------------------------------------------[$BAC5]---

._bca5	ld	($.TEMP3),de
	ld	a,(hl)
	inc	hl
	push	hl
	call	:_3581
	pop	hl
	ld	a,(hl)
	inc	hl
	push	hl
	ld	hl,($.TEMP4)
	push	hl
	ld	de,$0008
	add	hl,de
	ld	($.TEMP4),hl
	call	:_3581
	pop	hl
	ld	($.TEMP4),hl
	pop	hl
	ret
        
        `------------------------------------------------------------------------------

._bcc7  DATA $36 $38 $56 $58 $36 $38 $56 $58 $36 $38 $56 $58 $36 $38 $56 $58
        DATA $36 $38 $56 $58 $36 $38
._bcdd  DATA $40 $42        
        
}

INCLUDE "unknown_bcdf.oz80"
INCLUDE "anim_final.oz80"
INCLUDE "anim_emeralds.oz80"